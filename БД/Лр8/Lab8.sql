---1--- 
use BSTU_BUGAENKO; 
SELECT
	MIN(AUDITORIUM_CAPACITY) AS [Минимальное количество мест],
	MAX(AUDITORIUM_CAPACITY) AS [Максимальное количество мест],
	SUM(AUDITORIUM_CAPACITY) AS [Сумма всех мест],
	AVG(AUDITORIUM_CAPACITY) AS [Среднее количество мест],
	COUNT(AUDITORIUM_CAPACITY) AS [Всего аудиторий]
FROM AUDITORIUM

---2---

SELECT
	A2.AUDITORIUM_TYPENAME AS [Тип аудитории],
	MIN(A1.AUDITORIUM_CAPACITY) AS [Минимальное количество мест],
	MAX(A1.AUDITORIUM_CAPACITY) AS [Максимальное количество мест],
	SUM(A1.AUDITORIUM_CAPACITY) AS [Сумма всех мест],
	AVG(A1.AUDITORIUM_CAPACITY) AS [Среднее количество мест],
	COUNT(A1.AUDITORIUM_CAPACITY) AS [Всего аудиторий]
FROM AUDITORIUM AS A1 INNER JOIN AUDITORIUM_TYPE AS A2
ON A1.AUDITORIUM_TYPE=A2.AUDITORIUM_TYPE
GROUP BY AUDITORIUM_TYPENAME

---3---


SELECT * FROM 
	(SELECT CASE  	WHEN NOTE BETWEEN 1 AND 3 THEN '1-3'
				WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
				WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
				WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
				ELSE  '10' END [Оценки], COUNT(*) [Количество]
		FROM PROGRESS GROUP BY CASE
				WHEN NOTE BETWEEN 1 AND 3 THEN '1-3'
				WHEN NOTE BETWEEN 4 AND 5 THEN '4-5'
				WHEN NOTE BETWEEN 6 AND 7 THEN '6-7'
				WHEN NOTE BETWEEN 8 AND 9 THEN '8-9'
				ELSE '10' END) AS T
ORDER BY CASE [Оценки]
				WHEN '1-3' THEN 1
				WHEN '4-5' THEN 2
				WHEN '6-7' THEN 3
				WHEN '8-9' THEN 4
				ELSE 5 END

---4---

SELECT 
	F.FACULTY_NAME AS [Факультет],
	G.PROFESSION AS [Специальность],
	(2014-G.YEAR_FIRST) AS [Курс],
	ROUND(AVG(CAST(PR.NOTE AS FLOAT(4))),2) AS [Средняя оценка]
FROM
	PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
	INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
	INNER JOIN FACULTY AS F ON F.FACULTY=G.FACULTY
GROUP BY  	F.FACULTY_NAME, G.PROFESSION, (2014-G.YEAR_FIRST)
ORDER BY ROUND(AVG(CAST(PR.NOTE AS FLOAT(4))),2) DESC

---5---

SELECT 
	F.FACULTY_NAME AS [Факультет],
	G.PROFESSION AS [Специальность],
	(2014-G.YEAR_FIRST) AS [Курс],
	ROUND(AVG(CAST(PR.NOTE AS FLOAT(4))),2) AS [Средняя оценка]
FROM 	PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
	INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
	INNER JOIN FACULTY AS F ON F.FACULTY=G.FACULTY
WHERE PR.SUBJECTS='ОАиП' OR PR.SUBJECTS='БД'
GROUP BY  	F.FACULTY_NAME, G.PROFESSION, (2014-G.YEAR_FIRST)
ORDER BY ROUND(AVG(CAST(PR.NOTE AS FLOAT(4))),2)

---6---ROLLUP

SELECT PR.SUBJECTS, F.FACULTY_NAME,	G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY ROLLUP (F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS)

---7---CUBE

SELECT PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION, 	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY CUBE (F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS)

---8---UNION 

SELECT PR.SUBJECTS, F.FACULTY_NAME,	G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS
UNION
SELECT PR.SUBJECTS, F.FACULTY_NAME,	G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ХТиТ'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS

---UNION ALL
SELECT 	PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS
UNION ALL
SELECT 	PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ХТиТ'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS

---9---

---INTERSECT
SELECT 	PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS
intersect
SELECT 	PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ХТиТ'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS

---10--- EXCEPT
SELECT 	PR.SUBJECTS, F.FACULTY_NAME,  G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ИДиП'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS
EXCEPT
SELECT 	PR.SUBJECTS, F.FACULTY_NAME, G.PROFESSION,	AVG(PR.NOTE)
FROM PROGRESS AS PR INNER JOIN STUDENT AS S ON PR.IDSTUDENT=S.IDSTUDENT
INNER JOIN GROUPS AS G ON S.IDGROUP=G.IDGROUP
INNER JOIN FACULTY AS F ON G.FACULTY=F.FACULTY
WHERE G.FACULTY='ХТиТ'
GROUP BY F.FACULTY_NAME,G.PROFESSION,PR.SUBJECTS

---11---

SELECT SUBJECTS AS [Предмет], NOTE AS[Оценка], COUNT(*) AS [Количество оценок]
FROM PROGRESS AS PR1  
GROUP BY SUBJECTS, NOTE
HAVING NOTE=8 OR NOTE=9
ORDER BY SUBJECTS, NOTE DESC


---EXCEPT
---Возвращает все различные значения, возвращенные запросом, указанным слева от оператора EXCEPT, но отсутствующие в результатах выполнения правого запроса.
---INTERSECT
---Возвращает все различные значения, входящие в результаты выполнения запросов, указанных как слева, так и справа от оператора INTERSECT.