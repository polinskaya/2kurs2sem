USE BSTU_BUGAENKO

---1---
SELECT AUDITORIUM, AUDITORIUM_TYPENAME 
                 FROM  AUDITORIUM INNER JOIN AUDITORIUM_TYPE 
				 ON AUDITORIUM.AUDITORIUM_TYPE= AUDITORIUM_TYPE.AUDITORIUM_TYPE

---2---
SELECT AUDITORIUM, AUDITORIUM_TYPENAME FROM  AUDITORIUM INNER JOIN AUDITORIUM_TYPE 
                       ON AUDITORIUM.AUDITORIUM_TYPE= AUDITORIUM_TYPE.AUDITORIUM_TYPE 
                       WHERE AUDITORIUM_TYPENAME LIKE '%компьютер%'

---3---
SELECT T1.AUDITORIUM, T2.AUDITORIUM_TYPENAME 
                      FROM  AUDITORIUM AS T1, AUDITORIUM_TYPE AS T2
                      WHERE T1.AUDITORIUM_TYPE=T2.AUDITORIUM_TYPE 
					  AND T2.AUDITORIUM_TYPENAME LIKE '%компьютер%'

---4---
SELECT DISTINCT STUDENT.NAME AS [ФИО], 
FACULTY.FACULTY AS [Факультет], 
PULPIT.PULPIT_NAME AS [Кафедра], 
PROFESSION.PROFESSION AS [Специальность], 
SUBJECTS.SUBJECTS AS [Предмет], 
CASE 
WHEN PROGRESS.NOTE=6 THEN 'SIX' 
WHEN PROGRESS.NOTE=7 THEN 'SEVEN' 
WHEN PROGRESS.NOTE=8 THEN 'EIGHT' 
END [Оценка] 
FROM STUDENT 
INNER JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT 
AND PROGRESS.NOTE BETWEEN 6 AND 8 
INNER JOIN GROUPS ON STUDENT.IDGROUP = GROUPS.IDGROUP,
PULPIT 
INNER JOIN FACULTY ON PULPIT.FACULTY = FACULTY.FACULTY 
INNER JOIN SUBJECTS ON PULPIT.PULPIT = SUBJECTS.PULPIT 
INNER JOIN PROFESSION ON PULPIT.FACULTY = PROFESSION.FACULTY, 
SUBJECTS S
INNER JOIN PROGRESS PRO ON S.SUBJECTS = PRO.SUBJECTS 

ORDER BY FACULTY.FACULTY, PULPIT.PULPIT_NAME, PROFESSION.PROFESSION, STUDENT.NAME

---5---

SELECT FACULTY.FACULTY[Факультет], 
       PROFESSION.PROFESSION[Специальность], 
	   SUBJECTS.SUBJECTS[Дисциплина], 
	   PULPIT.PULPIT[Кафедра], 
	   STUDENT.NAME[Имя студента], 
CASE 
WHEN (PROGRESS.NOTE=6) THEN 'SIX' 
WHEN (PROGRESS.NOTE=7) THEN 'SEVEN' 
WHEN (PROGRESS.NOTE=8) THEN 'EIGHT' 
END [Оценка] 
FROM PROGRESS 
inner join STUDENT on STUDENT.IDSTUDENT=PROGRESS.IDSTUDENT 
inner join SUBJECTS on PROGRESS.SUBJECTS=SUBJECTS.SUBJECTS 
inner join GROUPS on STUDENT.IDGROUP=GROUPS.IDGROUP 
inner join PULPIT on SUBJECTS.PULPIT=PULPIT.PULPIT 
inner join FACULTY on GROUPS.FACULTY=FACULTY.FACULTY 
inner join PROFESSION on GROUPS.PROFESSION=PROFESSION.PROFESSION 
WHERE PROGRESS.NOTE between 6 and 8 
ORDER BY (CASE WHEN (PROGRESS.NOTE=6) THEN 3 
WHEN (PROGRESS.NOTE=8) THEN 2 
       ELSE 1 END); 

---6---

SELECT P.PULPIT_NAME AS [Кафедра], 
		ISNULL(T.TEACHER_NAME,'***') AS [Преподаватель]
FROM	PULPIT AS P LEFT OUTER JOIN	TEACHER AS T
ON P.PULPIT=T.PULPIT

---7---

SELECT P.PULPIT_NAME AS [Кафедра], 
		ISNULL(T.TEACHER_NAME,'***') AS [Преподаватель]
FROM	TEACHER AS T LEFT OUTER JOIN PULPIT AS P
ON P.PULPIT=T.PULPIT

---8---

SELECT	P.PULPIT_NAME AS [Кафедра], 
		ISNULL(T.TEACHER_NAME,'***') AS [Преподаватель]
FROM	TEACHER AS T RIGHT OUTER JOIN PULPIT AS P
ON T.PULPIT=P.PULPIT

---9---

CREATE table Table_1
(POLE1	char(10) NOT NULL constraint PK_POLE1 primary key,
);
CREATE table Table_2
(POLE2	char(10) NOT NULL constraint PK_POLE2 primary key,
);
insert into Table_1 (POLE1 ) values ('Its pole');
insert into Table_2 (POLE2 ) values ('Its pole');

-- FULL
SELECT Table_1.POLE1, Table_2.POLE2
FROM Table_1 FULL OUTER JOIN Table_2
ON Table_1.POLE1 = Table_2.POLE2

SELECT Table_1.POLE1, Table_2.POLE2
FROM Table_2 FULL OUTER JOIN Table_1
ON Table_1.POLE1 = Table_2.POLE2
-- LEFT
SELECT Table_1.POLE1, Table_2.POLE2
FROM Table_1 LEFT OUTER JOIN Table_2
ON Table_1.POLE1 = Table_2.POLE2
UNION
--RIGHT
SELECT Table_1.POLE1, Table_2.POLE2
FROM Table_1 RIGHT OUTER JOIN Table_2
ON Table_1.POLE1 = Table_2.POLE2

-- INNER
SELECT Table_1.POLE1, Table_2.POLE2
FROM Table_1 INNER JOIN Table_2
ON Table_1.POLE1 = Table_2.POLE2

---10---

--1) запрос, результат которого содержит данные левой таблицы и не содержит данные правой;
SELECT * FROM PULPIT LEFT OUTER JOIN TEACHER ON PULPIT.PULPIT=TEACHER.PULPIT

--2) запрос, результат которого содержит данные правой таблицы и не содержащие данные левой; 
SELECT * FROM PULPIT RIGHT OUTER JOIN TEACHER ON PULPIT.PULPIT=TEACHER.PULPIT

--3) запрос, результат которого содержит данные правой таблицы и левой таблиц; 
SELECT * FROM PULPIT FULL OUTER JOIN TEACHER ON PULPIT.PULPIT=TEACHER.PULPIT

---11---

-- CROSS JOIN
SELECT AUDITORIUM.AUDITORIUM, AUDITORIUM_TYPE.AUDITORIUM_TYPENAME FROM AUDITORIUM CROSS JOIN AUDITORIUM_TYPE
	WHERE AUDITORIUM.AUDITORIUM_TYPE=AUDITORIUM_TYPE.AUDITORIUM_TYPE

