<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0053)http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm -->
<HTML><HEAD><TITLE>Электронные издания:</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<META http-equiv=Content-Language content=ru><LINK 
href="part-003.files/main.css" type=text/css rel=stylesheet>
<SCRIPT src="part-003.files/fmtscr.js"></SCRIPT>

<SCRIPT src="part-003.files/eillustration.js"></SCRIPT>

<SCRIPT src="part-003.files/litlist.js"></SCRIPT>

<SCRIPT src="part-003.files/fragments.js"></SCRIPT>

<META content="MSHTML 6.00.2600.0" name=GENERATOR></HEAD>
<BODY class=глава><IFRAME id=ifr name=ifr src="about:blank" frameBorder=0 
width="100%" height=0></IFRAME>
<SCRIPT event=onload for=window>
 top.document.title=document.title;
 chid="part-003";

 chnum=3;
 chkurl();
 doStart(sa);
</SCRIPT>

<DIV class=глава id=sa>
<P><A name=i138></A></P>
<DIV class=заголовок>
<DIV class=заголовок1>
<DIV class=заголовок1нур>2.</DIV>
<DIV class=заголовок1текст>Глава II. Структура и элементы гипертекстовых 
документов</DIV></DIV></DIV>
<P></P>
<DIV class=поля style="MARGIN-LEFT: 10%; MARGIN-RIGHT: 10%">
<P>Эта глава посвящена описанию методики создания HTML-документов с помощью 
средств языка HTML В частности, рассматривается общая структура различных 
HTML-документов, включая издания с фреймовой структурой и HTML-формы. 
Рассмотрены основные разновидности тегов для создания заголовочной части 
документа и его тела, а также форматирования текста и иллюстрации, организации 
списковых и табличных структур, включения в документ ссылок и комментариев. 
Описаны варианты электронного учебника на основе фреймовой структуры. 
Анализируется пример HTML-формы, используемой на сервере RAMBLER для 
предоставления клиентам бесплатного электронного почтового адреса. В заключение 
дается общая характеристика средств для создания HTML-страниц с динамически 
изменяющимся содержимым, а именно - языка JavaScripts и каскадных таблиц 
стилей.</P></DIV>
<P><A name=i140></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.1.</DIV>
<DIV class=заголовок2текст>Общая характеристика и структура 
HTML-документа</DIV></DIV></DIV>
<P></P>
<P>На заре компьютеризации приходилось работать с простыми текстовыми 
редакторами, такими как WordStar, для которых информация, отображаемая на 
экране, отличалась от выводимой на бумагу с помощью принтера. В текст документа 
вставлялись специальные управляющие символы, которые не отображались на экране, 
но обеспечивали вывод на печать в нужном формате отдельных фрагментов документа. 
При форматировании одна группа символов определяла начало фрагмента, затем 
следовал текст, к которому применялось это форматирование, а после него 
следовали символы конца фрагмента. Так задавались разрядка, курсив, полужирный 
шрифт и пр. Аналогичные способы применялись и при работе с первыми версиями СУБД 
dBase (например, dBase II), о чем автор может судить по своему личному 
опыту.</P>
<P>Тот же принцип положен в основу структуры <A name=i141></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i141"><IMG 
class=иконка alt=HTML-документ src="part-003.files/predmetnyi.gif" 
border=0></A>HTML-документа, однако управляющие символы, которые здесь 
называются тегами, определяют особенности отображения информации, выводимой уже 
не на принтер, а на экран монитора. <A name=i142></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i142"><IMG 
class=иконка alt=Тег src="part-003.files/predmetnyi.gif" 
border=0></A>Значительная часть таких тегов используется парами: вначале 
открывающий тег, затем объект управления, а в конце - закрывающий тег. Такая 
конструкция называется <A name=i143></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i143"><IMG 
class=иконка alt=Контейнер src="part-003.files/predmetnyi.gif" 
border=0></A>контейнером, так как объект форматирования размещается внутри нее. 
Некоторые теги принципиально не нуждаются в паре. Примером может служить тег 
принудительного перевода строки. Тег может включать в себя некоторые параметры 
(атрибуты), которые размещаются непосредственно после имени тега. Если 
параметров несколько, то в качестве разделителей используются пробелы.</P>
<P>Для просмотра HTML-документов используют специальные программы, которые 
называются браузерами (Browser, т.&nbsp;е. средство просмотра в дословном 
переводе). Такие программы нуждаются в графической оболочке. В частности, 
значительное число браузеров (Microsoft Internet Explorer, Netscape 
Communicator, Opera и др.) работают в среде Windows 95, 98 и 2000.</P>
<P>Популярность <A name=i145></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i145"><IMG 
class=иконка alt="Язык HTML" src="part-003.files/predmetnyi.gif" 
border=0></A>языка HTML росла вместе с развитием <A name=i146></A><A 
class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i146"><IMG 
class=иконка alt=Интернет src="part-003.files/predmetnyi.gif" border=0></A>сети 
Интернет. Отсутствие в течение некоторого времени стандартов на язык HTML 
привело к тому, что некоторые браузеры отображали должным образом не все теги, а 
в версиях различных фирм одни и те же теги могли трактоваться неодинаково или 
даже не поддерживались. Широкое использование HTML-документов в сети Интернет 
привело к появлению международных стандартов на этот язык, называемых 
спецификациями языка HTML. Этой работой занялась широко известная организация <A 
name=i147></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/companii.htm#i147"><IMG 
class=иконка alt="World Wide Web Consortium (W3C)" 
src="part-003.files/companii.gif" border=0></A>World Wide Web Consortium (W3C). 
Первой из спецификаций, признанной большинством компаний-разработчиков, явилась 
HTML 2.0, представленная в конце 1995 г. Вскоре была выпущена предварительная 
(рабочая) версия спецификации 3.0, а в мае 1996 г.- проект спецификации HTML 
3.2. После длительного обсуждения и исправления в январе 1997 г. эта 
спецификация стала официальной рекомендацией для разработчиков HTML-документов и 
браузеров. В декабре 1997 г. официальной рекомендацией стала спецификация HTML 
4.0, которая остается в действии до настоящего времени.</P>
<P>Основой спецификации HTML 4.0 стало отделение параметров описания документов 
от параметров представления отдельных его фрагментов на экране монитора. Такое 
разделение облегчает адаптацию языка к различным платформам передам (Windows, 
UNIX, DOS и пр.) и упрощает процесс внесения изменений в документы. В 
соответствии с такой концепцией для описания документа следует использовать 
таблицу стилей, причем это понятие сходно с используемым в современных текстовых 
редакторах, таких как Word 97 или 2000. Использование же данных о форме 
представления документа вперемежку с содержанием самого документа не 
рекомендуется.</P>
<P>Спецификация HTML 4.0 отменяет ряд ранее использовавшихся тегов. Отмена тега 
означает, что этот тег по-прежнему поддерживается браузерами, но его применение 
в современных документах не рекомендуется. В дальнейшем такие теги могут быть 
переведены в разряд устаревших, которые уже могут не поддерживаться браузерами. 
Информация такого рода может быть получена на сайте <A class=переход 
href="http://www.w3.org/TR/" target=_blank>http://www.w3.org/TR/</A>.</P>
<P>Любой HTML-документ заключен в контейнер &lt;HTML&gt; и &lt;/HTML&gt;. Сам 
документ, как уже говорилось выше, представляет собой обычный текстовый файл. 
Его можно просматривать в DOS'e с помощью стандартных редакторов и средств 
просмотра текстовых документов, при этом вместе с самим текстом мы будем видеть 
и теги. Структурно документ распадается на две части: заголовочную и основную, 
ил и тело документа. Первая часть находится внутри контейнера &lt;HEAD&gt; и 
&lt;/HEAD&gt;, а основная часть - внутри контейнера &lt;BODY&gt; и 
&lt;/BODY&gt;.</P>
<P>Единственный обязательный тег, который используется в заголовочной части,- 
&lt;ТIТLE&gt;, причем он образует контейнер, внутри которого размещается текст 
заголовка. При загрузке документа в браузер текст заголовка загружается в первую 
очередь в окно заголовка браузера. Если текст заголовка достаточно информативен, 
пользователь в процессе поиска релевантных документов уже на этапе загрузки 
документа может определить, действительно ли ему нужен этот документ, а если не 
нужен, то сразу отказаться от его загрузки и перейти к загрузке следующего. 
Текст названия используется и при создании закладки для данного документа, с 
этой точки зрения также очень важна его информативность.</P>
<P>Многие HTML-документы связаны друг с другом, и ссылки от одного документа на 
другие могут быть абсолютные и относительные, причем последние формируются 
относительно того каталога, в котором расположен документ - источник ссылки. 
Абсолютные ссылки длинные, а относительные - перестают работать при перемещении 
основного документа. Можно включать сразу обе ссылки, чтобы связи между 
документами не нарушались в любых условиях.</P>
<P>Для формирования ссылок в заголовочной части применяется тег &lt;ВАSЕ&gt;, в 
котором используется один единственный параметр HREF, в качестве значения 
которого указывается URL (Universal Resours Locator) - адрес файла, на который 
производится ссылка. Адрес может быть локальным, т.&nbsp;е. задавать размещение 
файла в каталогах и подкаталогах на том же самом компьютере, или сетевым, 
например &lt;BASE HREF='http:// www.uprint.spb.ru/main.htm'&gt;.</P>
<P>Для организации логической связи и соподчиненности электронных изданий может 
использоваться тег &lt;LINK&gt;. В этом теге могут использоваться четыре 
параметра: HREF, REL, REV и TYPE. С помощью первого из них задается URL 
связанного с данным документа. Параметр REL определяет вид отношения между 
текущим и связанным с ним документом, a REV -обратное отношение (между другим и 
текущим документами). Последний параметр TYPE задает тип и параметры 
присоединяемой к документу таблицы стилей. Примеры тега &lt;LINK&gt;:</P>
<DIV class=листинг>
<P>&lt;LINK REL='contents' HREF='(адрес)'&gt;</P>
<P>&lt;CLINK HREF='mailto: (адрес автора)' REV='made'&gt;</P></DIV>
<P>Другими значениями параметра REL могут быть bookmark, copyright, glossary, 
help. Значение made параметра REV является признаком обратного отношения. Другие 
его значения: autor, editor, publisher.</P>
<P>Позднее в состав заголовочной части был добавлен специальный тег 
&lt;МЕТА&gt;, с помощью которого задается метаинформация, связанная с данным 
электронным изданием, или атрибуты для ускоренного поиска. Частные случаи 
метаинформации - это имя автора, издателя, редактора, название издательства, 
время публикации и другие характерные признаки издания. Тег &lt;МЕТА&gt; имеет 
два параметра: NAME, которым задается имя атрибута, и CONTENT, определяющий 
значение этого атрибута. Например:</P>
<DIV class=листинг>
<P>&lt;MЕТА NAME='author' CONTENT='B. А. Вуль'&gt;</P>
<P>&lt;СМЕТА NAME='description' СОМТЕМТ='Электронные издания'&gt;</P></DIV>
<P>Как нам кажется, приведенные примеры не нуждаются в каких-либо 
комментариях.</P>
<P>Итак, внутри контейнера &lt;HEAD&gt; и &lt;/HEAD&gt;, ограничивающего 
заголовочную часть HTML-документа, обычно используется один контейнер 
&lt;TITLE&gt; и &lt;/TITLE&gt;, внутри которого размещается текст заголовка, и 
могут быть включены теги &lt;BASE&gt;, &lt;LINK&gt; и &lt;МЕТА&gt;. Отметим, что 
HTML-документ, содержащий только заголовочную часть, будет нормально 
отображаться браузерами как пустой документ. Пример такого документа представлен 
на рис.&nbsp;2.1<IMG class=иконка 
onclick="openimgindex('../files/ris_2_1.gif','Рис. 02.01.','#E8E8E6')" 
alt="Рис. 02.01." src="part-003.files/illustration.gif" border=0>. А ниже 
показан соответствующий этому документу HTML-код:</P>
<DIV class=листинг>
<P>&lt;HTML&gt;</P>
<P>&lt;HEAD&gt;&lt;ТIТLE&gt;Пустой документ &lt;/TITLE&gt;&lt;/HEAD&gt;</P>
<P>&lt;BODY&gt;&lt;/BODY&gt;</P>
<P>&lt;/HTML&gt;</P></DIV>
<P><A name=i219></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.2.</DIV>
<DIV class=заголовок2текст>Тело документа и оформление его основных 
фрагментов</DIV></DIV></DIV>
<P></P>
<P><A name=i220></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.2.1.</DIV>
<DIV class=заголовок3текст>Тело документа</DIV></DIV></DIV>
<P></P>
<P>Внутри контейнера &lt;BODY&gt;&lt;/BODY&gt; размещается содержательная часть 
электронного документа. Сам тег &lt;ВОDY&gt; содержит ряд параметров, ни один из 
которых не является обязательным.</P>
<P>Параметры данного тега обеспечивают оформление всего тела документа. 
Перечислим их:</P>
<UL class=маркер>
  <LI class=элемент>
  <P>LINK - определяет исходный цвет ссылки;</P>
  <LI class=элемент>
  <P>BACKGROUND - задает URL изображения, определяющего фон тела документа;</P>
  <LI class=элемент>
  <P>BOTTOM MARGIN и TOPMARGIN - задает границу нижнего и верхнего полей 
  документа в пикселах;</P>
  <LI class=элемент>
  <P>LEFTMARGIN и RIGHTMARGIN - границы левого и правого полей документа в 
  пикселах;</P>
  <LI class=элемент>
  <P>BGCOLOR - задает цветовой оттенок фона документа (аналог тонирования 
  бумаги, на которой печатается издание);</P>
  <LI class=элемент>
  <P>BGPROPERTIES - определяет свойства фона, задаваемого предыдущим 
  параметром;</P>
  <LI class=элемент>
  <P>LINK - задает цвет еще не просмотренной ссылки;</P>
  <LI class=элемент>
  <P>SCROLL - определяет наличие полос прокрутки в документе, отображаемом в 
  окне браузера;</P>
  <LI class=элемент>
  <P>TEXT - определяет цвет текста;</P>
  <LI class=элемент>
  <P>VLINK - цвет уже просмотренной ссылки.</P></LI></UL>
<P>Ряд параметров связаны с использованием цветовых оттенков в 
HTML-документах.</P>
<P>Отметим, что по умолчанию в них используется RGB цветовое пространство, 
причем значение каждого из основных цветов имеет 256 уровней и задается в виде 
двух цифр в 16-тиричной системе счисления от 00 до ЕЕ. Таким образом, цветовой 
тон задается последовательностью из шести 16-тиричных цифр, которым предшествует 
сим вол #, например последовательность #FFFFFF соответствует белому цвету 
максимальной интенсивности, а #800080 - фиолетовому тону, интенсивность которого 
равна половине от максимальной.</P>
<P>Приведем примеры использования параметров в теге &lt;BODY&gt;:</P>
<DIV class=листинг>
<P>&lt;body link='#000080' background='image/background.gif'&gt;</P>
<P>&lt;body bgcolor='#COCOCO'&gt;</P></DIV>
<P>В первом примере задан синий цвет еще не просмотренной ссылки и в качестве 
фонового изображения используется файл background.gif, причем этот файл указан 
относительной ссылкой и находится в подкаталоге IMAGE. А во втором примере задан 
светлый фон для документа.</P>
<P><A name=i245></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.2.2.</DIV>
<DIV class=заголовок3текст>Теги логического форматирования 
текста</DIV></DIV></DIV>
<P></P>
<P>Теги логического форматирования текста позволяют выделить определенные типы 
текстовых фрагментов, т.&nbsp;е. осуществить структурную разметку текста. Их 
называют также тегами уровня блока, так как они не применимы к отдельным словам, 
а воздействуют лишь на фрагменты текста из нескольких слов.</P>
<P>Так, два тега &lt;ABBR&gt; и &lt;ACRONYM&gt; позволяют выделить 
аббревиатурные сокращения в пределах текста, причем второй используется для 
произносимой аббревиатуры. В теге &lt;ACRONYM&gt; может использоваться параметр 
TITLE, значением которого является полный текст сокращения. Например, 
контейнер:</P>
<DIV class=листинг>
<P>&lt;ACRONYM ТITLE='Московский Государственный Университет Печати'&gt; МГУП 
&lt;/ACRONYM&gt;</P></DIV>
<P>позволяет при указании курсором манипулятора мыши на аббревиатуру выводить во 
всплывающем окне соответствующий ей полный текст названия нашего 
Университета.</P>
<P>Тег-контейнер &lt;СIТЕ&gt; используется для выделения цитат, названий книг, 
газет и журналов. Браузеры обычно выводят текст, находящийся внутри контейнера, 
курсивом. Тег-контейнер &lt;CODE&gt; выводит текст как фрагмент программного 
кода (строки листинга программы) моноширинным шрифтом, a &lt;DFN&gt; отмечает 
текстовый фрагмент как определяемый термин. Аналогичным образом тег-контейнер 
&lt;STRONG&gt; выделяет содержимое как важные фрагменты текста.</P>
<P>Тег &lt;INS&gt; отмечает фрагмент текста как вставку, т.&nbsp;е. с его 
помощью можно отслеживать изменения, вносимые в основной текст. Тег может иметь 
два параметра: CITE (не путать с одноименным тегом) и DATETIME. С помощью 
первого параметра задается URL документа, поясняющего причины вставки, а второй 
параметр указывает дату и время вставки фрагмента с учетом часового пояса. 
Тег-контейнер &lt;DEL&gt; отмечает текст как намеченный к удалению. У него 
имеются параметры CITE и DATETIME, назначение которых точно такое, как в теге 
&lt;INS&gt;. Ниже приводятся несколько примеров записи тегов, которые, по нашему 
мнению, не требуют каких-либо комментариев.</P>
<DIV class=листинг>
<P>&lt;СIТЕ&gt;'Известия'&lt;/СIТЕ&gt; - Популярная Российская газета 
&lt;DFN&gt;Netscape Communicator 4.5&lt;/DFN&gt;-Версия 4.5 популярного пакета 
фирмы Netscape, в который, в частности, вводится браузер для просмотра 
HTML-файлов</P>
<P>&lt;INS CITE='www.uprint.spb.ru/mydoc.htm' DATETIME='2001-1–27 T16: 1:40+ 
0.00&gt; (вставленный фрагмент текста) &lt;/INS&gt;</P></DIV>
<P>Ниже, на рис.&nbsp;2.2<IMG class=иконка 
onclick="openimgindex('../files/ris_2_2.gif','Рис. 02.02.','#E8E8E6')" 
alt="Рис. 02.02." src="part-003.files/illustration.gif" border=0>, представлен 
пример отображения гипертекстового документа, в теле которого содержится ряд 
тегов логического форматирования текста.</P>
<P><A name=i289></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.2.3.</DIV>
<DIV class=заголовок3текст>Теги физического форматирования 
текста</DIV></DIV></DIV>
<P></P>
<P>Определяют формат заключенного внутри соответствующих контейнеров текста при 
отображении на экране монитора. Как уже говорилось в начале этой главы, вместо 
них желательно использовать теги логического форматирования, если последние 
могут выполнить аналогичную функцию.</P>
<P>Так, тег-контейнер &lt;В&gt; выделяет заключенный внутри его текст полужирным 
начертанием. Аналогичным образом, теги &lt;1&gt; и &lt;U&gt; означают курсивное 
начертание и подчеркивание текста соответственно, а тег &lt;ТТ&gt; - 
моноширинный шрифт. Теги &lt;STRIKE&gt; и &lt;5&gt; совпадают по назначению и 
обеспечивают перечеркивание фрагмента текста горизонтальной линией, как 
намеченного к удалению. Надо отметить, что все перечисленные теги относятся к 
устаревшим и не рекомендуются к применению. Так, вместо тега &lt;В&gt; 
предпочтительнее использовать рассмотренный выше тег логического форматирования 
текста &lt;STRONG&gt;, вместо &lt;STRIKE&gt; или &lt;5&gt; - &lt;DEL&gt;, а 
вместо &lt;ТТ&gt; - &lt;CODE&gt;.</P>
<P>Из других тегов «шрифтового оформления» отметим &lt;BIG&gt; и&lt;SMALL&gt; 
которые увеличивают или уменьшают кегель шрифта на одну единицу, &lt;SUB&gt; и 
&lt;SUP&gt;, размещающие символы выше или ниже уровня строки. Более 
универсальным в этой группе является тег&lt;ЕОМТ&gt;, который имеет три 
параметра: FACE, SIZE и COLOR. Первый параметр позволяет указать используемую в 
текстовом фрагменте гарнитуру, причем, если такая гарнитура не установлена на 
компьютере, то параметр игнорируется. Можно задавать несколько наименований 
гарнитур, разделяя их запятыми, тогда будет использоваться первая по списку из 
имеющихся в наличии. Второй параметр задает размер (но не кегель) шрифта. Всего 
в языке HTML предусмотрено семь размеров, из которых третий номер используется 
по умолчанию. Последний параметр указывает цвет группы символов текста и может 
задаваться в виде группы из семи символов, как указывалось выше, или в 
наименованиях цветовых тонов. Приведем несколько примеров:</P>
<DIV class=листинг>
<P>&lt;FONT FACE='Arial','Courier' SIZE=5 COLOR=red&gt; текст</P>
<P>&lt;/FONT&gt;.</P>
<P>&lt;FONT FACE='Times' SIZE=2 COLOR=#ffOOOO &gt; текст &lt;/FONT&gt;.</P>
<P>&lt;FONT FACE='Times'&gt; 5 &lt;SOP&gt;&lt;SMALL&gt; 2 
&lt;/SMALL&gt;&lt;/SOP&gt;&lt;/FONT&gt;.</P></DIV>
<P>В первом примере символы текста, содержащиеся внутри контейнера, будут 
отображаться гарнитурой Arial, если она установлена на компьютере, а в противном 
случае, гарнитурой Courier. Размер символов будет достаточно велик и они будут 
красного цвета. Во втором примере будет использована гарнитура Times, размер 
символов будет на единицу меньше нормального и символы будут того же самого 
красного цвета. В последнем случае в окне браузера будет отображаться 
5<SUP>2</SUP>, причем размер показателя степени будет на единицу меньше, чем ее 
основания.</P>
<P>Третий пример иллюстрирует и другое важное свойство тегов-контейнеров 
физического форматирования текстовых символов: контейнеры могут быть вложены 
один в другой, причем глубина вложений формально не ограничена. При написании <A 
name=i348></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i348"><IMG 
class=иконка alt=HTML-документ src="part-003.files/predmetnyi.gif" 
border=0></A>HTML-документа вручную необходимо только тщательно следить, чтобы 
контейнеры строго размещались один внутри другого. Действительно, в примере 
контейнер &lt;SMALL&gt; и &lt;/SMALL&gt; расположен внутри &lt;SUB&gt; и 
&lt;/SUB&gt;, а последний вложен в контейнер &lt;FONT&gt; и &lt;/FONT&gt;.</P>
<P>Все рассмотренные выше теги физического форматирования, если их действие 
рассматривать подобно функциям текстовых редакторов, относятся к шрифтовому 
оформлению текстовых фрагментов. Поэтому далее следует остановиться на тегах, 
выполняющих функции, подобные форматированию абзаца. К ним, в частности, 
относится тег разделения документа на абзацы &lt;Р&gt;, который помещается перед 
началом очередного абзаца. Закрывающий тег &lt;/Р&gt; не обязателен. Браузеры 
обычно отделяют абзацы друг от друга пустой строкой. Параметром этого тега 
является ALIGN, т.&nbsp;е. выравнивание. Параметры выравнивания: LEFT, CENTER, 
RIGHT и JUSTIFY, причем последний только сравнительно недавно начал 
поддерживаться браузерами.</P>
<P>При отображении документов в окне браузера место перевода строки определяется 
автоматически, в соответствии с реальными размерами его окна. В тех случаях, 
когда требуется выполнить принудительный перевод строки в определенном месте, 
используется тег &lt;BR&gt;, у которого нет закрывающего тега. Тег &lt;BR&gt;, в 
частности, используется при работе со стихотворными строками. В отличии от тега 
&lt;Р&gt;, при использовании тега &lt;BR&gt; браузер не генерирует на экране 
пустую строку.</P>
<P>Наоборот, в тех случаях, когда перенос на другую строку внутри фрагмента 
текста недопустим, следует использовать тег-контейнер &lt;NOBR&gt; и 
&lt;/NOBR&gt;. Находящийся внутри контейнера текст не переносится на другую 
строку, т.&nbsp;е. не разрывается. Если такая строка получается слишком длинной, 
то в окне просмотра браузера автоматически появляется полоса прокрутки. В 
качестве примера на рис.&nbsp;2.3<IMG class=иконка 
onclick="openimgindex('../files/ris_2_3.gif','Рис. 02.02.','#E8E8E6')" 
alt="Рис. 02.02." src="part-003.files/illustration.gif" border=0> показано 
отображение HTML-документа в окне браузера Internet Explorer, а выше - исходный 
HTML-код для этого документа.</P>
<P>Размер текста, помещенного внутри HTML-документа, формально не ограничен, 
т.&nbsp;е. он может быть эквивалентен множеству печатных страниц. На практике 
это обстоятельство приводит к появлению длинных страниц, для просмотра которых 
требуется вертикальная полоса прокрутки. Поэтому предусмотрена возможность 
разбивки такого протяженного текста на отдельные главы и параграфы с помощью 
заголовков различного уровня.</P>
<P>Для разметки заголовков служат шесть тегов-контейнеров &lt;Н1&gt; . . 
&lt;Нб&gt;, причем теги с меньшими номерами определяют заголовки более высокого 
уровня. Все перечисленные теги относятся к уровню блока, т.&nbsp;е. не могут 
использоваться для разметки отдельных слов. В качестве единственного параметра 
этих тегов используется ALIGN, который задает способ выравнивания заголовка 
(точно так же, как в теге &lt;Р&gt;). Например,</P>
<DIV class=листинг>
<P>&lt;Hl ALIGN=CENTER&gt; Заголовок 1-го уровня &lt;/Н1&gt;</P>
<P>&lt;НЗ ALI6N=LEFT&gt; Заголовок 3-го уровня &lt;/НЗ&gt;.</P></DIV>
<P>В первом примере заголовок выравнивается по центру и в нем используется 
наибольший размер кегля шрифта, такой как в теге &lt;FONT SIZE=7&gt;. Во втором 
случае текст заголовка выравнивается полевому краю, а размер шрифта 
соответствует значению пара метра SIZE=5. Во всех случаях заголовки выделяются 
осветленным пространством в виде пропущенной строки до и после строки заголовка 
и полужирным шрифтом самого заголовка. Наконец, тег заголовка аккумулирует в 
себе функции тега абзаца, т.&nbsp;е. нет необходимости в использовании 
одновременно с тегом &lt;НЗ&gt; еще и тега &lt;Р&gt;.</P>
<P>Помимо заголовков, для разделения документа на отдельные разделы могут 
использовать горизонтальные линии, играющие ту же роль, что и орнаментальные 
линейки в печатных изданиях, где такие линейки используются в конце определенных 
разделов, отделяя предыдущий фрагмент издания от последующего. Для генерации 
таких линий в электронном документе используется тег &lt;ВР&gt;, который не 
является контейнером. В теге могут использоваться пять различных параметров. 
Параметр выравнивания ALIGN может принимать значения LEFT, CENTER и RIGHT. 
Параметр WIDTH задает длину линии в пикселах или в процентах от ширины окна 
браузера, что обычно предпочтительнее, a SIZE определяет толщину линии в 
пикселах. Параметр COLOR определяет цветовые характеристики линии, т.&nbsp;е. 
реализует те же функции, что и аналогичный параметр в теге &lt;Р&gt;. Наконец, 
параметр NOSHADE отменяет рельефный характер линии, причем у него значение 
отсутствует, само наличие в теге этого параметра характеризует отсутствие 
рельефа. Пример записи тега:</P>
<DIV class=листинг>
<P>&lt;ВР ALIGN=CENTER WIDTH=75% SIZE=8 COLOR=#800080&gt;</P></DIV>
<P>На практике мы иногда сталкиваемся со случаями, когда в HTML-документ 
необходимо включить уже отформатированный текст, причем он должен отображаться 
браузером так, как он был подготовлен в текстовом редакторе. Для этой цели 
предусмотрен тег-контейнер &lt;PRE&gt;. После этого тега можно включить 
предварительно отформатированный текст, который должен в том же виде выводиться 
в окне браузера.</P>
<P>Для включения цитат большой протяженности (много сотен символов) предназначен 
тег-контейнер &lt;BLOCKQUOTE&gt;.</P>
<P>Это - тег уровня блока. Браузеры выделяют текст, размещенный внутри такого 
контейнера, пустыми строками до и после и небольшим отступом слева по отношению 
к основной части документа. Поэтому тег &lt;BLOCKQUOTE&gt; можно использовать не 
только для длинных цитат, но и для выделения некоторых блоков текста.</P>
<P>Из других тегов уровня блока, используемых для выделения фрагментов 
документа, можно отметить &lt;DIV&gt;. Используя контейнер с этим тегом, можно 
управлять параметрами данного фрагмента путем назначения стилей, например</P>
<DIV class=листинг>
<P>&lt;DIV STYLE='color: green'&gt; (Фрагмент документа) &lt;/DIV&gt;</P></DIV>
<P>выделит все текстовые элементы указанного фрагмента зеленым цветом.</P>
<P>Тег-контейнер уровня блока &lt;CENTER&gt; предназначен для горизонтального 
выравнивания всех заключенных в него элементов посередине окна просмотра 
браузера. В частности, он используется для выравнивания по центру таблиц (<A 
class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i716">см. § 
2.6</A>).</P>
<P>Косвенное отношение ко всем рассмотренным в данном разделе тегам имеет 
тег-контейнер &lt;ADDRESS&gt;, который применяется для указания автора, 
владельца авторских прав, адреса автора, а иногда и даты создания и последнего 
обновления электронного издания. Текст внутри такого контейнера обычно 
отображается браузерами курсивом. Соответствующий пример мы приведем в конце 
главы, сравнивая исходный HTML-код и отображение документа в окне браузера.</P>
<P>Специфическим видом текста, который иногда включают в электронное издание и 
ценность которого, на наш взгляд, сомнительна, является бегущая строка. Зато на 
Web-страницах такие фрагменты нередко используются, преимущественно в рекламных 
целях. Для создания бегущей строки используется тег-контейнер &lt;MARQUEE&gt;. В 
теге используется ряд параметров: DIRECTION, BEHAVIOR, WIDTH, HEIGHT, LOOP, 
SCROLLDELAY, BGCOLOR. Первый параметр определяет направление движения строки и 
принимает значения LEFT или RIGHT. Параметры WIDTH и HEIGHT позволяют задать 
размеры окна, в котором движется строка текста. Размеры задаются в пикселах или 
в процентах от ширины и высоты страницы. Параметр LOOP задает число повторов 
цикла перемещения строки, если он вообще не упомянут, то число повторов 
бесконечно. Параметр SCROLLDELAY определяет период повторения изображения 
движущегося текста в миллисекундах. Наконец, значение BGCOLOR позволяет 
стандартным способом определить цвет фона окна, в котором движется строка 
текста. Если требуется изменить гарнитуру, кегль, цвети другие параметры шрифта 
бегущей строки, то следует тег-контейнер &lt;MARQUEE&gt; поместить внутрь 
тега-контейнера &lt;FONT&gt;, в котором и задать все характеристики шрифта.</P>
<P><A name=i437></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.3.</DIV>
<DIV class=заголовок2текст>Оформление списков терминов и 
определений</DIV></DIV></DIV>
<P></P>
<P>Списки принадлежат к наиболее употребительным формам как в электронных, так и 
в печатных изданиях. Возможность представления списковых структур предусмотрена 
практически во всех текстовых редакторах, в частности, развитая система для 
списковых структур имеется в MS Word, весьма популярном редакторе в нашей 
стране. В <A name=i438></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i438"><IMG 
class=иконка alt=HTML-документ src="part-003.files/predmetnyi.gif" 
border=0></A>HTML-документах наряду с обычными маркированным и нумерованным 
списками предусмотрен отдельный список определений. Оформление этих списков 
посредством специальных тегов составит предмет этого параграфа.</P>
<P><A name=i439></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.3.1.</DIV>
<DIV class=заголовок3текст><A name=i440></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i440"><IMG 
class=иконка alt="Список маркированный" src="part-003.files/predmetnyi.gif" 
border=0></A>Маркированные списки</DIV></DIV></DIV>
<P></P>
<P>Создаются с помощью тега-контейнера &lt;UL&gt; (Unordered List - 
неупорядоченный список). В теге могут использоваться два параметра: COMPACT, 
который изначально предназначался для вывода элементов списка в компактной форме 
(уменьшенным кеглем и расстоянием между строками) и TYPE, который используется 
для принудительного задания вида маркера. Параметр COMPACT не имеет значений. 
Современными браузерами он игнорируется. Параметр TYPE может принимать одно из 
трех значений: disc, circle и square. В первом случае маркеры (bullets) имеют 
вид закрашенного круга, во втором - окружности малого диаметра, в третьем - 
закрашенного квадрата. По умолчанию значение TYPE=disk.</P>
<P>Каждому элементу списка предшествует тег &lt;LI&gt; (List Item - элемент 
списка), который необязательно должен быть контейнером. В качестве параметра 
этого тега также используется TYPE, который может принимать те же самые три 
значения. Таким образом, в списке принципиально могут использоваться и различные 
маркеры для представления отдельных элементов.</P>
<P><A name=i445></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.3.2.</DIV>
<DIV class=заголовок3текст>Создание нумерованных списков</DIV></DIV></DIV>
<P></P>
<P><A name=i446></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i446"><IMG 
class=иконка alt="Список нумерованный" src="part-003.files/predmetnyi.gif" 
border=0></A>Нумерованный список организуется с помощью тега-контейнера 
&lt;OL&gt; (Ordered List), внутри которого размещаются все элементы списка. 
Открывающий и закрывающий теги обеспечивают пропуски строк до и после списка, 
выделяя его таким образом в документе. В составе тега могут использоваться три 
параметра: COMPACT, TYPE и START. Смысл первого параметра тот же самый, что и в 
теге &lt;UL&gt;. Параметр TYPE по-прежнему определяет тип маркера, причем TYPE=1 
определяет маркеры в виде арабских цифр, TYPE=A задает маркеры в виде прописных 
букв латинского алфавита, TYPE=a - в виде строчных латинских букв, наконец, 
TYPE=I и TYPE=i определяют маркеры в виде римских цифр, больших и малых 
соответственно.</P>
<P>Параметр TYPE, заданный в форме определенного числа, определяет начало 
отсчета для первого элемента списка.</P>
<P>Каждый элемент нумерованного списка предваряется тегом &lt;LI&gt;. Вэтом 
случае в состав тега может входить параметр VALUE, позволяющий изменять номер 
очередного элемента списка, в результате чего соответственно изменяются и все 
последующие номера. В качестве примера можно привести фрагмент спортивных 
новостей, где содержатся результаты какого-либо соревнования:</P>
<DIV class=листинг>
<P>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt; Пример нумерованного списка 
&lt;/TITLE&gt;&lt;/HEAD</P>
<P>&lt;BODY&gt;&lt;OL&gt;&lt;B&gt; Результаты чемпионата мира по гандболу 
2001&lt;/В&gt;</P>
<P>&lt;LI&gt; Франция</P>
<P>&lt;LI&gt; Румыния</P>
<P>&lt;LI&gt; Германия</P>
<P>&lt;BR&gt;. . .</P>
<P>&lt;LI VALUE=6&gt; Россия</P>
<P>&lt;LI&gt; Украина</P>
<P>&lt;/OL&gt;&lt;/BODY&gt;&lt;/HTML&gt;</P></DIV>
<P>При выводе в окне браузера документа, HTML-код которого представлен выше, мы 
увидим изображение, показанное на рис.&nbsp;2.4<IMG class=иконка 
onclick="openimgindex('../files/ris_2_4.gif','Рис. 02.04.','#E8E8E6')" 
alt="Рис. 02.04." src="part-003.files/illustration.gif" border=0>. Название 
документа, размещенного в теге-контейнере &lt;TITLE&gt; в заголовочной части 
документа, выведено в строке заголовка браузера. Название списка в теле 
документа показано полужирным шрифтов непосредственно перед списком. Нумерация 
списка по умолчанию производится арабскими цифрами, так как параметр TYPE в теге 
&lt;OL&gt; отсутствует. Нумерация списка начинается по умолчанию с первого 
номера, так как и параметр START в теге &lt;OL&gt; отсутствует. С помощью 
параметра VALUE=6 в одном из тегов &lt;LI&gt; изменен номер очередного элемента 
списка, а дальнейшая нумерация продолжается с нового номера. Для создания 
отточия использован тег принудительного перевода строки &lt;BR&gt;.</P>
<P><A name=i501></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.3.3.</DIV>
<DIV class=заголовок3текст>Списки определений</DIV></DIV></DIV>
<P></P>
<P>В научно-технических и учебных изданиях нередко используют <A 
name=i502></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i502"><IMG 
class=иконка alt="Список определений" src="part-003.files/predmetnyi.gif" 
border=0></A>списки или словари определений, которые в зарубежных книгах 
называют глоссариями. (Например, см. <IMG class=иконка 
onclick="showlitlist(new Array('Розен К. и др. Введение в Unix.- СПб.: Лори.- 1999.','','Кульгин М. Технология корпоративных сетей. Энциклопедия.- СПб.: Питер, 2000.',''));" 
alt="ссылка на источники литературы" src="part-003.files/litlist.gif">). Каждый 
элемент такого списка начинается с определяемого термина, после которого 
следуетего определение. Для создания списка определений служит тег-контейнер 
&lt;DL&gt; (Definition List), внутри котороготег&lt;ОТ&gt; (Definition Term) 
задает определяемый термин в форме единственной строки, а тег&lt;00&gt; 
(Definition Description) предшествует абзацу с определением этого термина. Для 
примера приведем фрагмент списка определений для компьютерной графики.</P>
<DIV class=листинг>
<P>&lt;html&gt;&lt;head&gt;&lt;title&gt;Cписок терминов и определений 
&lt;/title&gt;&lt;/head&gt;</P>
<P>&lt;body bgcolor=#d5d5d5&gt;&lt;DL&gt;&lt;ОТ&gt;Пиксел</P>
<P>&lt;DD&gt;Наименьший элемент изображения, который характеризуется 
постоянством параметров по всей своей поверхности &lt;DT&gt; Разрешение 
монитора</P>
<P>&lt;DD&gt; Разрешение монитора определяется количеством пикселов на единицу 
длины и составляет около 96 пикселей на дюйм &lt;ОТ&gt;Линиатура растра</P>
<P>&lt;DD&gt; Частота размещения растровых точек в плоскости изображения, 
измеряется числом линий на дюйм &lt;/DL&gt;&lt;/body&gt;&lt;/html&gt;</P></DIV>
<P>Отображение этого файла в окне просмотра браузера показано на 
рис.&nbsp;2.5<IMG class=иконка 
onclick="openimgindex('../files/ris_2_5.gif','Рис. 02.05.','#E8E8E6')" 
alt="Рис. 02.05." src="part-003.files/illustration.gif" border=0>. Как следует 
из записи исходного HTML-документа никаких попыток выравнивания текста и 
формирования отступов не производилось. Сами теги &lt;DT&gt; и &lt;DD&gt; так 
форматируют текст, что обеспечивают оптимальное его восприятие пользователем. 
Фон документа задается определенным уровнем серого в соответствии со значением 
параметра BGCOLOR в теге &lt;BODY&gt;. Кстати, язык HTML, как следует из 
представленного выше фрагмента HTML-кода, нечувствителен к регистру.</P>
<P><A name=i553></A></P>
<DIV class=заголовок>
<DIV class=заголовок3>
<DIV class=заголовок3нур>2.3.4.</DIV>
<DIV class=заголовок3текст>Многоуровневые списковые структуры</DIV></DIV></DIV>
<P></P>
<P><A name=i554></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i554"><IMG 
class=иконка alt="Список многоуровневый" src="part-003.files/predmetnyi.gif" 
border=0></A>Многоуровневые списки в HTML-документах могут создаваться путем 
вложения одного типа списка внутрь другого. Например, фрагменты нумерованного 
списка могут быть вложены внутрь маркированного или наоборот. Сказанное 
иллюстрируется простым примером, в котором перечисляются спутники некоторых 
планет нашей солнечной системы.</P>
<DIV class=листинг>
<P>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt; Пример двухуровневого списка 
&lt;/TITLE&gt;&lt;/HEAD</P>
<P>&lt;BODY&gt;&lt;OL&gt;&lt;B&gt; Спутники планет &lt;/В&gt;</P>
<P>&lt;BR&gt; ....</P>
<P>&lt;LIбл/&gt; ЗЕМЛЯ</P>
<P>&lt;OL&gt;&lt;LI&gt; Луна &lt;/OL&gt;</P>
<P>&lt;LI&gt;MAPC</P>
<P>&lt;OL&gt;&lt;LI&gt; Фобос</P>
<P>&lt;LI&gt; Деймос &lt;/OL&gt;</P>
<P>&lt;BR&gt; ....</P>
<P>&lt;/UL&gt;&lt;/BODY&gt;&lt;/HTML&gt;</P></DIV>
<P>Отображение двухуровнего списка в окне браузера показано на рис.&nbsp;2.6<IMG 
class=иконка 
onclick="openimgindex('../files/ris_2_6.gif','Рис. 02.06.','#E8E8E6')" 
alt="Рис. 02.06." src="part-003.files/illustration.gif" border=0>. Внутри 
тега-контейнера маркированного списка &lt;UL&gt; размещены два контейнера 
нумерованного списка &lt;О1_&gt; и &lt;/О1_&gt; со своими тегами &lt;LI&gt; 
каждый. Дополнительный отступ слева обеспечивает хорошую читаемость текста. По 
этой схеме можно создавать и многоуровневые списки.</P>
<P><A name=i610></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.4.</DIV>
<DIV class=заголовок2текст>Использование графики при оформлении электронного 
издания</DIV></DIV></DIV>
<P></P>
<P>Известно, что с помощью графики можно точнее передать идеи и назначение 
любого издания, в том числе и электронного. Без <A name=i611></A><A 
class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i611"><IMG 
class=иконка alt=Иллюстрации src="part-003.files/predmetnyi.gif" 
border=0></A>иллюстрации полосы набора выглядят однообразными, а хорошо 
подобранная и умело размещенная графика делает издание гораздо более 
привлекательным. Ограничения в использовании графики с позиций эстетики связано 
с опасностью загромождения документа изображениями, в том числе и фоновыми, и 
навязчивой анимацией, зачастую не связанной непосредственно с тематикой 
издания.</P>
<P>С технической точки зрения изображения требуют значительно большего объема 
информации, чем простой текст, поэтому может возникнуть информационная 
перегрузка, особенно при использовании сетевых технологий с каналами 
недостаточной пропускной способности. Известно, что многие пользователи сети 
Интернет отключают за грузку графических файлов, чтобы быстрее загрузить 
документ и ознакомиться с ним. Несколько улучшило положение применение 
компактных форматов графических файлов, таких как JPEG (с частичной потерей 
информации), GIF и PNG. В качестве иллюстрации сказанного можно привести данные 
по информационному объему файла, в котором хранится рис.&nbsp;2.6<IMG 
class=иконка 
onclick="openimgindex('../files/ris_2_6.gif','Рис. 02.06.','#E8E8E6')" 
alt="Рис. 02.06." src="part-003.files/illustration.gif" border=0>: в формате 
TIFF - 46 Кб, JPEG - 31 Кб, PNG - 8 Кб и GIF - около 5 Кб.</P>
<P>Мы уже сталкивались с использованием изображения в качестве фонового при 
знакомстве с тегом &lt;BODY&gt;. Для этого в параметре BACKGROUND указывался 
URI-файла, хранящего изображения. Если в электронных изданиях, распространяемых 
на носителях, можно использовать практически любые графические файлы, то для 
сетевых изданий преимущественно используются GIF-файлы, реже файлы в формате 
JPEG.</P>
<P>Основным средством встраивания изображений в текст служит тег &lt;IMG&gt;, 
обязательным параметром которого является SRC, значение которого - адрес (URL) 
файла изображения. Параметр выравнивания изображения на полосе ALIGN может 
принимать восемь различных значений, определяющие различные способы его 
размещения на странице, два параметра позволяют установить размер изображения, 
еще два - расстояние от границы изображения до текста, отдельный параметр 
позволяет создать вокруг изображения рамку, а еще один - задать альтернативный 
текст, который будет выведен вместо изображения при отказе пользователя от его 
загрузки. Рассмотрим последовательно эти параметры.</P>
<P>Выравнивание изображения осуществляется двумя принципиально различными 
способами:</P>
<UL class=маркер>
  <LI class=элемент>
  <P>по левому или правому краю наборной полосы (аналог оборочной иллюстрации в 
  печатном тексте);</P>
  <LI class=элемент>
  <P>изображение встраивается как элемент одной из строк текста (печатного 
  аналога такого способа выравнивания нет, более того, в печатном издании такое 
  расположение рисунка совершенно недопустимо).</P></LI></UL>
<P>Для выравнивания изображения по левому или правому краю окна браузера 
параметру ALIGN присваиваются значения LEFT или RIGHT соответственно, а текст 
обтекает рисунок с противоположной стороны. Для задания размеров изображения 
используются параметры WIDTH (ширина) и HEIGHT (высота), причем значения каждого 
параметра могут задаваться как в абсолютных единицах - пикселах, так и в 
относительных - процентах от соответствующего размера окна браузера. Реальные 
размеры изображения могут не совпадать со значениями параметров WIDTH и HEIGHT. 
В этом случае браузер автоматически масштабирует изображение по отдельным 
координатам.</P>
<P>Графические изображения могут задаваться в двух основных форматах: векторном 
и растровом. В соответствии с первым форматом создаются файлы сравнительно 
малого информационного объема, легко масштабируемые, однако в них не может быть 
достигнуто высокое художественное качество. Кроме того, преобразование описания 
изображения, содержащегося в файле, в реальный рисунок требует значительных 
вычислительных ресурсов.</P>
<P>Растровый формат масштабируется с искажениями, файлы в нем имеют большой 
информационный объем, но он обеспечивает достаточно высокое качество 
изображения. Кроме того, сама подготовка компьютерных графических файлов связана 
с оцифровкой (преобразованием в цифровой формат) реальных изображений, например 
рисунков и фотографий. Для этой цели используются так называемые сканеры, 
которые преобразуют изображение в один из растровых форматов, чаще TIFF.</P>
<P>С растровыми же форматами работают цифровые фото- и видеокамеры, которые все 
шире используются в современных издательских технологиях для прямого 
преобразования изображения в его цифровой эквивалент.</P>
<P>Поэтому масштабирование оправдано только для векторной графики, для растровой 
же следует определить реальные размеры изображения по горизонтали и вертикали в 
пикселах и задать эти размеры в параметрах WIDTH и HEIGHT. При этом:</P>
<UL class=маркер>
  <LI class=элемент>
  <P>изображение будет выведено в реальных размерах и без искажений;</P>
  <LI class=элемент>
  <P>при сетевом распространении документа пользователь сразу будет знать 
  размеры изображения, а в остальную часть документа будет без промедления 
  загружаться текст.</P></LI></UL>
<P>Остановимся кратко на других способах выравнивания изображения в электронном 
издании. Соответствующие значения параметра ALIGN следующие: ТОР, ТЕХТТОР, 
BOTTOM, BASELINE, ABSBOTTOM, MIDDLE, ABSMIDDLE. Значение TOP выравнивает верхнюю 
границу изображения по самому высокому элементу текущей строки, а ТЕХТТОР - по 
самому высокому текстовому элементу. Смысл различия в том, что элементом строки 
можетбыть и другое изображение. Значения BASELINE и BOTTOM действуют одинаково и 
выравнивают нижнюю границу изображения по базовой линии текущей строки, 
т.&nbsp;е. линии, на которой «стоят» шрифтовые элементы (нижние выносные 
элементы символов находятся под базовой линией), a ABSBOTTOM - выравнивает 
нижнюю границу изображения по нижней границе текущей строки, включая все 
элементы строки, в том числе и графические, если они имеются. Наконец, значения 
MIDDLE и ABSMIDDLE выравнивают середину изображения по базовой линии или 
посередине текущей строки соответственно. Еще раз отметим, что по нашему мнению, 
применение параметров выравнивания этой группы в большинстве случаев снижает 
качество оформления страницы, противоречит основным принципам дизайна полос.</P>
<P>Чтобы выделить изображение в текстовом документе, полезно предусмотреть 
незанятое текстом пространство вокруг него. Это можно осуществить с помощью 
параметров HSPACE и VSPACE, которые определяют отступы (осветленное 
пространство) по горизонтали и вертикали в пикселах. Для выделения изображения 
на странице можно заключить его в рамку, толщина которой в пикселах задается с 
помощью параметра BORDER. Наконец, для пользователей, работающих в режиме 
отключения загрузки графики, возможность вывода альтернативного текста дает 
параметр ALT. В случае же загрузки изображения при выводе на него курсора мыши 
появляется текст подсказки во всплывающем окне. Ниже приводятся пример тега 
&lt;IMG&gt; с различными параметрами:</P>
<DIV class=листинг>
<P>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt; Пример вставки изображения в документ 
&lt;/TITLE&gt;&lt;/HEAD&gt;</P>
<P>&lt;BODYXIM6 SRC=globus.jpg ALIGN=LEFT WIDTH=40% HEI6HT=40% HSPACE=8 
VSPACE=10 BORDER=5 А1/Г='Рельеф земной поверхности'&gt;</P>
<P>&lt;Р ALIGN='Justify'&gt; В данном документе рисунок выравнивается влево, 
т.&nbsp;е. он должен размещаться в левом верхнем углу. Размеры рисунка 60 на 60 
пикселей. Рисунок окружен рамкой шириной в 5 пикселей и отделен от текста полями 
по 10 пикселей с каждой стороны. Текст размещается справа от рисунка и, в 
дальнейшем, ниже его.&lt;/Р&gt;&lt;/BODY&gt;&lt;/HTML&gt;</P></DIV>
<P>Приведенный выше HTML-документ отображался в браузере MS Internet Explorer и 
полученное в окне браузера изображение показано на рис.&nbsp;2.7<IMG 
class=иконка 
onclick="openimgindex('../files/ris_2_7.gif','Рис. 02.07.','#E8E8E6')" 
alt="Рис. 02.07." src="part-003.files/illustration.gif" border=0>. В частности, 
на рисунке видна надпись «Рельеф земной поверхности», заданная в виде значения 
параметра ALT и возникающая на экране при подведении указателя мыши к 
изображению.</P>
<P>В заключение отметим, что фирма Netscape в своем браузере предусмотрела 
возможность использования еще одного параметра втеге&lt;1МС&gt;, а именно 
LOWSRC. В качестве значения этого параметра указывается графический файл с 
альтернативным изображением того же самого объекта, но с гораздо более низким 
разрешением и глубиной цвета. В результате альтернативное изображение имеет на 
порядок меньший информационный объем и быстро загружается на Web-страницу, а 
только позднее загружается основное изображение. Пример записи тега с этим 
параметром представлен ниже:</P>
<DIV class=листинг>
<P>&lt;IMG SRC=globus.gif LOWSRC=low-globus.gif&gt;</P></DIV>
<P>Следует заметить, что размеры этих двух изображений должны совпадать. Если 
параметр LOWSRC задает изображение меньших размеров, то основное изображение 
будеттакже трансформироваться к этим меньшим размерам. Чтобы избежать 
возникающих вследствие этого эффекта искажений, следует в теге &lt;IMG&gt; 
указать действительные размеры основного</P>
<P>изображения в пикселах стем, чтобы при первом проходе и загрузке 
вспомогательного изображения размеры последнего приводились к размерам 
основного, а не наоборот.</P>
<P><A name=i658></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.5.</DIV>
<DIV class=заголовок2текст>Включение в издание ссылок и 
комментариев</DIV></DIV></DIV>
<P></P>
<P><A name=i659></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i659"><IMG 
class=иконка alt=Ссылка src="part-003.files/predmetnyi.gif" border=0></A>Ссылки 
являются важнейшей составляющей HTML-документа, так как именно они и делают этот 
документ гипертекстовым, реализуя важнейшее преимущество электронного документа 
по сравнению с печатным, состоящее в широчайших возможностях перемещения по 
документу и вне его. Ссылка состоит из указателя и адресной части. Указатель 
представляет собой малый фрагмент документа (одно или два слова или 
изображение), который каким-либо образом выделен (например, цветом или 
подчеркиванием). Если подвести указатель мыши к ссылке и щелкнуть кнопкой мыши, 
то браузер загрузит новый документ или перейдет к той части данного документа, 
адрес которой указан во второй части.</P>
<P>Текстовые указатели чаще всего выделяются в окне браузера подчеркиванием. 
Если же в качестве ссылки использовано изображение, то такое изображение браузер 
самостоятельно заключает в рамку. Второй частью ссылки является адрес той 
страницы, которая должна быть загружена. Адрес, как уже указывалось ранее, может 
быть абсолютным ил и относительным. В последнем случае адрес формируется 
относительно того каталога, в котором расположен исходный документ. Пример 
предыдущего параграфа содержит относительный адрес рисунка globus.jpg, который 
расположен в том же каталоге, что и сам HTML-документ.</P>
<P>Для организации ссылок используется тег-контейнер &lt;А&gt;, который имеет 
параметр HREF, причем значение этого параметра и является адресом загружаемой 
страницы, о чем говорилось выше. Конструкция данного контейнера выглядит 
следующим образом:</P>
<DIV class=листинг>
<P>&lt;А HREF=URL-aflpec нужной страницы&gt; Текст-указатель ссылки 
&lt;/А&gt;.</P></DIV>
<P>Когда курсор мыши подводится к текстовому указателю, во всплывающем окне 
появляется адрес ссылки, который записан в качестве значения параметра HREF. 
Щелкнув левой кнопкой мыши по этому указателю, мы инициируем процесс загрузки 
документа или страницы с этим адресом.</P>
<P>Запись ссылки, указателем в которой служит не текст, а изображение, выглядит 
следующим образом:</P>
<DIV class=листинг>
<P>&lt;А HREF=URL-aflpec нужной страницы&gt;&lt;IMG 8КС=(имя графического 
файла)&gt;&lt;/А&gt;</P></DIV>
<P>Действительно, в представленном примере тег &lt;IMG&gt; с параметром SRC, 
задающим имя графического файла, играет ту же самую роль, что и текст-указатель 
ссылки в предыдущем примере. Некоторым преимуществом последнего способа является 
то, что изображение занимает больше места в окне браузера, чем текст-указатель 
ссылки, и на него можетбыть быстрее выведен курсор мыши.</P>
<P>Выше уже отмечалось, что относительная ссылка указывает не полный путь к 
файлу, а его местоположение относительного того документа, из которого 
производится ссылка. Для облегчения работы с относительными ссылками в 
заголовочной части документа может использоваться тег &lt;BASE&gt;, в котором с 
помощью параметра HREF указан абсолютный URL-адрес этого документа, относительно 
которого и строится вся адресация ссылок (<A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i140">см. также § 
2.1</A> данной главы).</P>
<P>Если ссылки на внешние документы позволяют свободно ориентироваться 
пользователю в безбрежном море сети Интернет, то для качественной навигации в 
каждом электронном изданий необходимы ссылки внутренние (в пределах самого 
издания). Скажем, встретив в издании незнакомый термин, Вы захотите узнать его 
смысл и назначение, для чего необходимо обратиться к списку терминов и 
определений (<A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i437">см. § 
2.3</A>), а затем вернуться к исходному тексту. Любой большой документ требует 
также наличия ссылок из его оглавления к соответствующим разделам. Могут 
потребоваться и другие ссылки, например, в текущем и предыдущем абзацах, по 
существу, такие ссылки указаны в виде адресации пользователя к определенным 
разделам данного учебника. Однако в печатном издании пользователь должен 
заложить текущую страницу, найти раздел, на который указывает ссылка, прочесть 
его и вернуться к заложенному месту. В электронном же издании эти операции 
автоматизированы и их выполняет компьютерная программа-браузер. И это их 
существенное преимущество.</P>
<P>Для организации <A name=i680></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i680"><IMG 
class=иконка alt=Закладка src="part-003.files/predmetnyi.gif" 
border=0></A>переходов необходимо нечто, напоминающее закладки в печатном 
издании. Такие закладки, на которые может быть организована ссылка, реализуются 
с помощью параметра NAME уже упоминавшегося тега &lt;А&gt;. Параметр NAME 
позволяет определить имя закладки стем, чтобы в дальнейшем адресоваться именно к 
ней. Например, изданного параграфа мы адресовались к <A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i140">§ 2.1</A> и <A 
class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i437">§ 2.3</A>. 
Чтобы такие переходы можно было осуществить в электронном учебнике, к названиям 
таких параграфов надо добавить закладки:</P>
<DIV class=листинг>
<P>&lt;А NAME=paragraph_2-l&gt;&lt;А NAME=paragraph_2-3&gt;,</P></DIV>
<P>а в оглавлении записать названия этих параграфов внутри тега-контейнера 
&lt;А&gt;:</P>
<DIV class=листинг>
<P>&lt;A HREF='#paragraph_2-l'&gt; 2.1. Общая структура гипертекстового 
документа, заголовок и тело документа, теги оформления заголовка &lt;/А&gt;,</P>
<P>&lt;А HREF=Yl#paragraph_2-3&gt; 2.3. Оформление списков терминов и 
определений &lt;/А&gt;.</P></DIV>
<P>Когда такие закладки имеются, переходы к ним можно было бы оформить не только 
из оглавления, но и из любого другого места электронного издания. Вместо 
указания в скобках (<A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i140">см. § 2.1</A>) 
можно было бы вставить конструкцию с тегом-контейнером, а именно:</P>
<P>&lt;А HREF='#paragraph_2-l'&gt; (см. § 2.1) &lt;/А.</P>
<P>Можно настроить браузер таким образом, что соответствующая любой ссылке 
страница будет демонстрироваться в отдельном окне. Тогда, просмотрев текст или 
рисунок на этой странице, мы можем ее закрыть или свернуть, возвращаясь таким 
образом к основному документу. Отрегулировав должным образом размер этого 
отдельного окна, мы можем одновременно рассматривать как ссылку, так и основной 
документ. Эти возможности будут подробнее рассмотрены в <A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i891">§ 2.7</A> при 
изучении фреймовой структуры гипертекстового документа.</P>
<P>Ссылки могут указывать и на специальные виды документов, например, на аудио- 
или видеофайлы или анимационные файлы в GIF-формате. Браузер может уметь или же 
не уметь работать с указанным специальным типом документа. Скажем, все 
современные браузеры умеют работать с анимацией в формате GIF89a, часто 
встречающейся на страницах в сети Интернет. Ссылка на такой файл приводит к 
появлению на страницы «движущегося» изображения. Если же браузер не умеет 
работать со специальным документом (не распознает тип принятого документа), он 
обратится кдругим программам на компьютере пользователя. Если нужная программа 
будет обнаружена, браузер передаст полученный документ этой программе для его 
обработки. Скажем ссылка на видеофайл формата AVI (<A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-004.htm#i1231">см. § 
3.5</A>, <A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-005.htm#i1463">§ 4.5</A>, <A 
class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-006.htm#i1729">§ 5.5</A>), 
может привести к запуску программы для демонстрации видеофайлов. В результате 
видеофайл будет показан в специальном дополнительном окне.</P>
<P>В заключение несколько слов о включении <A name=i709></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i709"><IMG 
class=иконка alt=Комментарий src="part-003.files/predmetnyi.gif" 
border=0></A>комментариев в HTML-документ. Комментарий может состоять из любого 
числа строк и слов, расположенных внутри контейнера из двух тегов: открывающего 
текст комментария - &lt;!- и завершающего этот текст––-&gt;. Текст комментария 
не отображается в окне браузера, поэтому его можно рассматривать как личные 
заметки авторов или редакторов в процессе работы над изданием. В то же время, 
если не убрать комментарий из окончательного текста издания, то он принципиально 
становится доступным и для читателей.</P>
<P>Другой тег-контейнер для записи комментариев - &lt;СОММЕМТ&gt; - 
поддерживается только браузером MS Internet Explorer и не нашел широкого 
применения.</P>
<P><A name=i716></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.6.</DIV>
<DIV class=заголовок2текст>Оформление таблиц</DIV></DIV></DIV>
<P></P>
<P><A name=i717></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i717"><IMG 
class=иконка alt=Таблица src="part-003.files/predmetnyi.gif" 
border=0></A>Таблицы достаточно широко применяются в электронной документации, 
причем для Web-страниц они используются не только в традиционном смысле, как 
метод упорядоченного представления данных, но и для форматирования самих этих 
страниц. Описание таблицы на языке HTML размещается внутри тела документа, 
т.&nbsp;е. в контейнере &lt;BODY&gt; и &lt;/BODY&gt;. Внутри документа 
допускается любое число таблиц, причем некоторые из них могут быть вложенными. 
Каждая таблица создается в пределах контейнера &lt;ТАВLЕ&gt; и &lt;/ТАВLЕ&gt;, 
где размещается описание структуры самой таблицы и ее содержимое.</P>
<P>Каждая строка таблицы размещается после тега &lt;TR&gt; (Table Row). Каждая 
ячейка таблицы в пределах строки оформляется тегом &lt;ТН&gt; (Table Header) - 
для заголовочной части таблицы или &lt;TD&gt; (Table Data) - для ячеек, в 
которых размещаются данные. В заголовочной части по умолчанию применяется 
полужирный шрифт и выравнивание по центру. Для отображения данных по умолчанию 
используется нормальное (светлое) начертание и выравнивание влево. Можно 
отметить, что для всех тегов, перечисленных в этом абзаце, закрывающий тег не 
обязателен, т.&nbsp;е. он может быть опущен.</P>
<P>Количество строк в таблице определяется количеством строчных тегов 
&lt;TR&gt;, а число столбцов - максимальным количество тегов &lt;ТН&gt; или 
&lt;TD&gt; в одной из строк. Строкой считается все то, что следует после 
очередного тега &lt;TR&gt; и до следующего такого тега. Для ячейки таблицы, не 
содержащей данных, надо использовать пустой контейнер &lt;TD&gt; и &lt;/TD&gt;. 
Если пустые ячейки расположены в конце строки, то их описание может быть опущено 
- браузер самостоятельно оставит необходимое число ячеек пустыми.</P>
<P>Таблица может иметь название - то, что в редакционной практике называется 
тематическим заголовком (в отличие от нумерационного), причем если в печатном 
издании заголовок обязательно расположен над таблицей, то в электронном он может 
быть расположен как сверху, так и снизу. Заголовок расположен внутри контейнера 
&lt;CAPTION&gt; и &lt;/CAPTION&gt;. Указанный контейнер должен быть помещен 
внутрь тега-контейнера &lt;ТАВLЕ&gt;, но вне области описания тегов &lt;TR&gt;, 
&lt;TH&gt; или</P>
<P>&lt;TD&gt;. Последняя спецификация HTML рекомендует размещать тег-контейнер 
&lt;CAPTION&gt; сразу после открытия таблицы, т.&nbsp;е. после тега 
&lt;TABLE&gt; и до первого тега &lt;TR&gt;.</P>
<P>В теге &lt;CAPTION&gt; первоначально был предусмотрен один необязательный 
параметр ALIGN, который предназначался для вертикального выравнивания и мог 
принимать одно из двух значений ТОР (по умолчанию) или BOTTOM. Затем выяснилась 
необходимость и горизонтального выравнивания стремя стандартными параметрами 
LEFT, RIGHT и CENTER. Однако нельзя в одном теге дважды использовать один и тот 
же параметр. Поэтому в современных версиях языка HTML параметр ALIGN (по 
умолчанию ALIGN=LEFT) оставлен для выравнивания по горизонтали, а вертикальное 
выравнивание (точнее - размещение заголовка над или под таблицей) осуществляется 
с помощью параметра VALIGN.</P>
<P>В теге &lt;TABLE&gt; могут использоваться следующие параметры: BORDER, 
CELLSPACING, CELLPADDING, WIDTH, ALIGN, HEIGHT и BACKGROUND. Параметр BORDER 
управляет отображением рамки вокруг каждой ячейки таблицы (т.&nbsp;е. задает 
вертикальные и горизонтальные линии сетки) и вокруг всей таблицы, причем его 
значение задаеттолщину рамки в пикселах вокруг всей таблицы, а само наличие 
этого параметра задает линии сетки. Значение параметра BORDER появилось лишь в 
версии 3.2 спецификации HTML, до это го тол щи на рамки вокруг таблицы не 
регулировалась.</P>
<P>Параметр CELLSPACING задает расстояние между смежными по горизонтали и 
вертикали ячейками, причем это расстояние задается в пикселах, т.&nbsp;е. внутри 
каждой ячейки создается нечто вроде рамки и лишь при CELLSPACING=0 эти рамки 
отдельных ячеек сливаются в единую сетку. Параметр CELLPADDING определяет 
расстояние между рамкой вокруг ячейки и данными внутри ее, т.&nbsp;е. величину 
отступа символов от рамки. При значении CELLPADDING=0 текст может касаться 
рамки, что в плане дизайна едва ли можно приветствовать. По умолчанию значение 
CELLSPACING=2, a CELLPADDING=1, в этом случае расстояние между данными в 
соседних ячейках будет равно б пикселам.</P>
<P>Параметры WIDTH и HEIGHT позволяют задать ширину и высоту таблицы как в 
абсолютных единицах - пикселах, так и в относительных - процентах относительно 
размера окна браузера. В большинстве случаев эти размеры не требуются браузеру, 
так как он автоматически вычисляет размеры таблицы, учитывая множество факторов, 
включая параметры документа в целом, количество ячеек в таблице и их заполнение. 
Браузер стремится установить такую ширину таблицы, чтобы она помещалась в окне 
просмотра браузера и не было необходимости в прокрутке таблицы по горизонтали, 
т.&nbsp;е. чтобы горизонтальный слайдер отсутствовал.</P>
<P>Надо отметить, что и при задании значений параметров WIDTH и HEIGHT нет 
гарантии в том, что они будут выдержаны браузером. Если ширина таблицы больше 
ширины окна просмотра, браузер сделает попытку уменьшить ширину до требуемой, 
пропорционально уменьшая размеры колонок, и только если это не удастся, 
установит заданную ширину таблицы, снабдив окно слайдером.</P>
<P>Параметр ALIGN задает горизонтальное выравнивание таблицы в окне просмотра 
браузера. Возможны два значения этого параметра: LEFT и RIGHT, каждый из которых 
обеспечивает обтекание таблицы текстом документа с противоположной стороны. Это 
соответствует оборочной таблице в печатном издании. По умолчанию параметр ALIGN 
принимает значение LEFT. Если параметр ALIGN опущен, то текста рядом с таблицей 
не будет вообще, т.&nbsp;е. таблица будет форматной или полосной (когда она 
занимает всю страницу по вертикали), если использовать термины, принятые в 
печатных изданиях. Значение параметра ALIGN=CENTER не предусмотрено. Однако если 
мы хотим ориентировать таблицу по центру, можно пойти другим путем: заключить 
контейнер &lt;TABLE&gt; n&lt;/TABLE&gt;, который описывает всю таблицу целиком, 
в контейнер &lt;CENTER&gt; и &lt;/CENTER&gt;. Напомним, что последний имеет 
уровень блока, т.&nbsp;е. форматирует любое количество данных, размещенных 
внутри его (<A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i219">см. § 
2.2</A>).</P>
<P>Отметим, что параметр ALIGN может использоваться и для форматирования данных 
внутри каждой ячейки таблицы, например:</P>
<DIV class=листинг>
<P>&lt;TABLE ALIGN=LEFT WIDTH=40% BORDER=5 &gt;</P>
<P>&lt;TR&gt;&lt;TH ALIGN=RIGHT&gt; Фамилия &lt;/ТН&gt;&lt;TH ALIGN=RIGHT&gt; 
Оценка&lt;/TH&gt;</P>
<P>&lt;TR&gt;&lt;TD ALIGN=RIGHT&gt; Иванов A.H. &lt;/TD&gt;&lt;TD 
ALIGN=RIGHT&gt;</P>
<P>4 &lt;/TD&gt;</P>
<P>&lt;TR&gt;&lt;TD ALIGN=RIGHT&gt; Сергеев И.Д. &lt;/TD&gt;&lt;TD 
ALIGN=RIGHT&gt;5 &lt;/TD&gt;</P>
<P>&lt;TR&gt;&lt;TD ALIGN=RIGHT&gt; Лавров В.В. &lt;/TD&gt;&lt;TD 
ALIGN=RIGHT&gt; 3&lt;/TD&gt;</P>
<P>&lt;/TABLE&gt;</P></DIV>
<P>Пример отображения браузером документа, включающего в себя приведенный выше 
фрагмент, показан на рис.&nbsp;2.8<IMG class=иконка 
onclick="openimgindex('../files/ris_2_8.gif','Рис. 02.08.','#E8E8E6')" 
alt="Рис. 02.08." src="part-003.files/illustration.gif" border=0>. На рисунке 
хорошо видна рамка вокругтаблицы и то, что таблица выровнена влево, а справа 
обтекается текстом. В качестве текста использован фрагмент второго абзаца, 
начинающегося на данной странице. Следует обратить внимание на то, что хотя вся 
таблица выровнена влево, данные в каждой строке выравниваются вправо. Формально 
можно было бы в каждой ячейке выравнивать текст по-своему. Однако визуально это 
выглядело бы очень неприглядно.</P>
<P>Для качественного дизайна полосы данные во всех ячейках столбца таблицы 
должны выравниваться одинаково, т.&nbsp;е. в примере на рис.&nbsp;2.8<IMG 
class=иконка 
onclick="openimgindex('../files/ris_2_8.gif','Рис. 02.08.','#E8E8E6')" 
alt="Рис. 02.08." src="part-003.files/illustration.gif" border=0> возможно было 
бы оставить первый столбец неизменным, а данные во втором выровнять влево (или 
даже по центру).</P>
<P>Параметр BACKGROUND, который уже был показан в примере, приведенном выше, 
также может использоваться как в теге &lt;ТАВLЕ&gt;, так и в тегах &lt;ТН&gt; и 
&lt;TD&gt;, определяющих характеристики отдельных ячеек таблицы. Во всех случаях 
он определяет фоновый рисунок с помощью параметра HREF. В последней версии 
спецификации HTML в теге &lt;ТАВLЕ&gt; появился параметр COLS, задающий общее 
число колонок в таблице. Эта дополнительная информация ускоряет процесс 
построения таблицы браузером.</P>
<P>При создании заголовочной части таблицы, реже боковика и прографки (основной 
части таблицы, где размещаются данные), возникает потребность в объединении 
нескольких ячеек по горизонтали (в строке) или по вертикали в единое целое. Для 
этого используются параметры ROWSPAN и COLSPAN, первый из которых объединяет 
несколько строк, а второй - столбцов в одну ячейку. Пример описания такой 
таблицы приводится ниже.</P>
<DIV class=листинг>
<P>&lt;TABLE BORDER=10 SELLSPACING=3 CELLPADDING=4 WIDTH=80%&gt;</P>
<P>&lt;CAPTION&gt;&lt;H4&gt; Объединение ячеек в заголовочной 
части&lt;/Н4&gt;</P>
<P>&lt;TR&gt;&lt;TH ROWSPAN=2&gt;3aголовок &lt;/TH&gt;&lt;TH COLSPAN=2&gt; 
Заголовок 2 &lt;/ТН&gt;</P>
<P>&lt;TR&gt;&lt;TH&gt;Заголовок 2-1&lt;/ТН&gt;&lt;ТН&gt;Заголовок 2-2 
&lt;/ТН&gt;</P>
<P>&lt;TR ALIGN=CENTER&gt;&lt;TD&gt; 1 &lt;TD&gt; 2 &lt;TD&gt; 3</P>
<P>&lt;/TABLE&gt;</P></DIV>
<P>Показанный ниже рис.&nbsp;2.9<IMG class=иконка 
onclick="openimgindex('../files/ris_2_9.gif','Рис. 02.09.','#E8E8E6')" 
alt="Рис. 02.09." src="part-003.files/illustration.gif" border=0> построен на 
основании HTML-документа, в теле которого содержится приведенный выше контейнер 
&lt;TABLE&gt; и &lt;/TABLE&gt; со всем его содержимым. По сравнению с таблицей, 
показанной на рис.&nbsp;2.8<IMG class=иконка 
onclick="openimgindex('../files/ris_2_8.gif','Рис. 02.08.','#E8E8E6')" 
alt="Рис. 02.08." src="part-003.files/illustration.gif" border=0>, здесь с 
помощью тега &lt;CAPTION&gt; добавлен тематический заголовок, выровненный по 
центру таблицы. В таблице хорошо видны рамки ячеек и рамка вокруг таблицы в 
целом. В ячейке «Заголовок 1» объединены две строки, а в ячейке «Заголовок 2» - 
два столбца, что соответствует исходному HTML-коду. В третьей строке, как это 
часто делают для длинных узких таблиц, указаны номера колонок, что позволяет при 
переносе на следующую полосу не повторять заголовка целиком. Отметим, что 
используя параметры ROWSPAN и COLSPAN можно составить многоуровневые заголовки 
таблиц любой степени сложности.</P>
<P><A name=i891></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.7.</DIV>
<DIV class=заголовок2текст>Фреймовая структура электронного 
издания</DIV></DIV></DIV>
<P></P>
<P>Для удобства работы с электронным изданием окно просмотра браузера может быть 
принудительно разбито на несколько прямоугольных областей, непосредственно 
примыкающих друг к другу. В каждую такую область можно загружать отдельные 
HTML-документы, просматривая каждый из них независимо от других. Впервые 
возможность работы с фреймовыми структурами была реализована в браузере фирмы 
Netscape версии 2.0. MS Internet Explorer поддерживает фреймы начиная с версии 
3.0.</P>
<P>Фреймовая структура целесообразна для применения в следующих случаях:</P>
<UL class=маркер>
  <LI class=элемент>
  <P>для представления информации в нескольких смежных областях окна просмотра 
  браузера, каждая из которых просматривается независимо, чтобы иметь 
  возможность сопоставить эту информацию;</P>
  <LI class=элемент>
  <P>для того чтобы в определенной области экрана размещалась информация, 
  которая должна постоянно находиться в поле зрения пользователя;</P>
  <LI class=элемент>
  <P>для того чтобы иметь возможность управлять загрузкой документов в одну из 
  областей, работая в другой области экрана.</P></LI></UL>
<P>В целом же фреймовая структура предоставляет пользователю удобные средства 
навигации в пределах электронного документа, практически нереализуемые при 
других вариантах. Видимо, по этим причинам фреймовая структура достаточно часто 
используется для реализации Web-страниц, особенно входных или лицевых страниц 
сайтов, т.&nbsp;е. тех, на которые пользователь попадает при начальной загрузке 
этого сайта.</P>
<P>Принципиальное отличие HTML-кода, задающего фреймовую структуру, состоит в 
том, что вместо тега &lt;BODY&gt; в нем используется тег-контейнер 
&lt;FRANESET&gt;, параметры которого и определяют разбиение площади окна 
браузера на отдельные участки или области. Для этого у тега &lt;FRAMESET&gt; 
используется два параметра: ROWS и COLS. Параметр ROWS делит окно браузера на 
горизонтальные полосы, a COLS - на вертикальные. Размеры этих полос могут 
устанавливаться в абсолютных единицах - пикселах и в относительных - процентах 
или пропорциональных единицах. Первые два способа задания уже рассматривались 
ранее и не требуют дополнительных комментариев, третий же способ использует 
количество звездочек (*), каждая из которых представляет одну часть целого, 
величина этой части в данном случае определяется как высота окна браузера, 
деленная на суммарное количество звездочек под знаком параметра ROW. Все три 
способа деления окна на полосы иллюстрируется приведенными ниже примерами:</P>
<DIV class=листинг>
<P>&lt;FRAMESET ROWS='10%,80%,10%'&gt;</P>
<P>&lt;FRAMESET ROWS='60,480,60'&gt;</P>
<P>&lt;FRAMESET ROWS='*,8*,*'&gt;.</P></DIV>
<P>Все три варианта с тегом &lt;FRAMESET&gt; описывают деление экрана на три 
горизонтальные полосы, из которых верхняя и нижняя одинаковой ширины, а средняя 
в восемь раз шире каждой из них. Аналогичным образом описывается и деление на 
вертикальные полосы с помощью параметра COLS. Для параметров ROWS и COLS 
возможен и смешанный вариант задания значений, когда используются два или даже 
все три способа одновременно. Например:</P>
<DIV class=листинг>
<P>&lt;FRAMESET COLS='70,4*,*,15%'&gt;.</P></DIV>
<P>Тег задает деление окна на четыре колонки, первая из которых имеет ширину в 
70 пикселов, последняя - 15% от ширины окна, ширина третьей колонки составляет 
1/5, а второй - 4/5 от оставшейся части ширины окна.</P>
<P>Внутри контейнера &lt;FRAMESET&gt; и &lt;/FRAMESET&gt; могут использоваться 
лишь вложенные такие же контейнеры или теги &lt;FRAME&gt;, которые определяют 
каждый одиночный фрейм. Кстати, в теле документа может быть несколько 
расположенных последовательно тегов-контейнеров &lt;FRAMESET&gt;, в каждом из 
которых могут быть и вложенные аналогичные</P>
<P>контейнеры. Практически же такие конструкции используются крайне редко. Тег 
&lt;FRAME&gt; размещается внутри контейнера &lt;FRAMESET&gt; и 
&lt;/FRAMESET&gt;, причем количество тегов &lt;FRAME&gt; внутри этого контейнера 
должно в точности совпасть с число отдельных фреймов, т.&nbsp;е. каждый фрейм 
должен быть описан своим тегом &lt;FRAME&gt;. Тег &lt;FRAME&gt; содержит шесть 
параметров, а именно: SRC, NAME, MARGINWIDTH, MARGINHEIGHT, SCROLLING и 
NORESIZE.</P>
<P>Наиболее важный из перечисленных параметров SRC определяет URL или адрес 
документа, который изначально загружается в данный фрейм. Обычно это 
HTML-документ, содержащий и заголовочную часть, и тело. Параметр NAME позволяет 
присвоить этому фрейму уникальное (не повторяющееся) имя, которое может 
использоваться для адреса циикданному фрейму. В теге &lt;А&gt;, который 
рассматривался в <A class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i658">§ 2.5</A>, для 
адресации к фреймам используется специальный пара метр TARGET, значением 
которого является имя соответствующего фрейма. Проиллюстрируем сказанное 
примером:</P>
<DIV class=листинг>
<P>&lt;FRAME SRC='maintenance.htm' NAME='main_frame'&gt;</P>
<P>&lt;A HREF='main_doc.htm' TAR6ET='main_frame'&gt; Основной документ 
&lt;/A&gt;.</P></DIV>
<P>В представленном примере в основной фрейм (имя этого фрейма - main_f rame) 
исходно был загружен документ maintenance.htm, т.&nbsp;е. оглавление 
электронного издания. Если же подвести указатель мыши к словам «Основной 
документ», которые являются указателем ссылки, и щелкнуть левой кнопкой, то в 
этот фрейм будет загружен новый документ под названием main_doc.htm, который 
находится в том же самом каталоге и представляет собой содержательную часть 
данного издания. Таким образом, присвоение фрейму определенного имени позволяет 
в дальнейшем загружать в него документы.</P>
<P>Параметры MARGINWIDTH и MARGINHEIGHT тега &lt;FRAME&gt; позволяют установить 
ширину полей фрейма по ширине и высоте. Отметим, что левое и правое поле имеют 
одинаковую ширину. То же самое можно сказать и про верхнее и нижнее поля. 
Значение этих параметров задается в абсолютных единицах- пикселах. Под полями 
здесь подразумевается свободное пространство, где не могут присутствовать 
иллюстрации и текст (как и в печатном издании). Минимальное значение этих 
параметров, устанавливаемое по умолчанию, равно 1 пикселу.</P>
<P>Если содержимое фрейма не помещается в отведенной части окна браузера, для 
него будутавтоматически создаваться полосы прокрутки по нужной координате. Для 
управления этим процессом служит параметр SCROLLING, который может принимать 
одно из трех допустимых значений: Yes, No и Auto. Последнее значение 
устанавливается по умолчанию. Значение No запрещает создание полос прокрутки, a 
Yes приводит к обязательному их созданию, независимо оттого, нужны они или 
нет.</P>
<P>Обычно пользователь может самостоятельно изменять размеры фреймов, точно так 
же, как и размеры окна браузера, где они размещаются. При таких операциях может 
нарушаться оптимальное соотношение между размерами фреймов и ухудшаться 
восприятие информации с экрана компьютера. Для того, чтобы предотвратить эти 
действия пользователя, служит параметр NORESIZE. Для этого параметра не 
предусмотрено каких-либо значений, но само его использование в описании одного 
из фреймов запрещает не только изменение размера этого фрейма, но и любого 
смежного с ним. Приведем несколько примеров изданий с использованием фреймовых 
структур. Первый пример задает структуру из пяти фреймов, которая образуется в 
результате деления окна браузера на три горизонтальные полосы, средняя из 
которых делится еще и на две колонки. Ширина нижней полосы, как следует из 
строки 3 HTML-кода, составляет 50 пикселов, а верхней - восьмую часть от высоты 
оставшейся области окна браузера. Средняя полоса разделена на узкую полоску 
слева и вчетверо более широкую оставшуюся часть (см. строка 5 HTML-кода). 
Наконец, эта оставшаяся часть поделена пополам по горизонтали (см.строка 7 
HTML-кода).</P>
<DIV class=листинг>
<P>&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;Цифровая обработка 
изображений&lt;/TITLE&gt;</P>
<P>&lt;МЕТА NAME='Author' СОNTENT='В.А.Вуль'&gt;&lt;/HEAD&gt;</P>
<P>&lt;FRAMESET ROWS='*,7*,50'&gt;</P>
<P>&lt;FRAME SRC='zag.html'scrolling='no'&gt;</P>
<P>&lt;FRAMESET COLS='20%,80%'&gt;</P>
<P>&lt;FRAME SRC='ogl.html'&gt;</P>
<P>&lt;FRAMESET ROWS='*,*'&gt;</P>
<P>&lt;FRAME SRC='lg.html' NAME='gl'&gt;</P>
<P>&lt;FRAME SRC='2g.html' NAME='g2'&gt;</P>
<P>&lt;/FRAMESET&gt;&lt;/FRAMESET&gt;</P>
<P>&lt;FRAME SRC='inf.html' scrolling='no'&gt;</P>
<P>&lt;/FRAMESET&gt;</P>
<P>&lt;/HTML&gt;</P></DIV>
<P>Полученная в результате структура экрана показана на рис.&nbsp;2.10<IMG 
class=иконка 
onclick="openimgindex('../files/ris_2_10.gif','Рис. 02.10.','#E8E8E6')" 
alt="Рис. 02.10." src="part-003.files/illustration.gif" border=0>. Оба фрейма, в 
которых выводится содержимое электронного издания, имеют наибольшие размеры. В 
большинстве случаев содержание можно выводить в один большой фрейм, в этом же 
конкретном случае их два, что позволяет в одном изучать конкретный графический 
пакет PhotoShop, а в другом - общие методы обработки цифрового изображения, 
используемые в данном конкретном случае, например сжатие изображения.</P>
<P>Если пронумеровать расположенные на экране фреймы, присвоив им номера с 1-го 
по 5-й, то можно заметить, что содержание 1-го, 2-го и 5-го фреймов не 
изменяется: в 1-й постоянно загружен HTML-файл, отображающий заголовок документа 
(см. строка 4 исходного кода), в 5-й - информация об учебном заведении и авторе 
электронного пособия (чтобы можно было посмотреть другие учебнике на сайте 
uprint.spb.ru или по электронной почте связаться с автором), а во второй - файл 
оглавления (см. строка б исходного кода). В 3-м и 4-м фреймах выводятся 
параграфы 1-й и 2-й глав: в 3-м фрейме выводится § 1.1, ссылка на который во 
фрейме 2 выделена другим цветом как уже использованная, а во фрейме 4 
отображается § 2.1. Таким образом, из одного фрейма с помощью ссылок 
осуществляется управление информацией в двух других фреймах.</P>
<P>Отметим, что специалисты по педагогике и психологии образования считают, что 
не следует отображать на экране более 3-х - 4-х фреймов, в противном случае 
ухудшается процесс восприятия информации с экрана. Несколько подробнее на этом 
мы остановимся в главе 9, а здесь приведем следующий варианттого же самого 
электронного учебного пособия, но с лаконичной 2-фреймовой структурой. Исходный 
HTML-код для него:</P>
<DIV class=листинг>
<P>&lt;html&gt;&lt;head&gt;&lt;title&gt;Учебник по 
графике&lt;/title&gt;&lt;/head&gt;</P>
<P>&lt;frameset cols='20%,*'&gt;</P>
<P>&lt;frame пате='Навигация' target='main' scrolling='auto' 
src='naviagation.htm' noresize&gt;</P>
<P>&lt;frame name='main' src='content.htm' 
target='main'&gt;&lt;noframes&gt;&lt;body&gt;&lt;р&gt;Ваш браузер не 
поддерживает фреймы 
&lt;/р&gt;&lt;/body&gt;&lt;/noframes&gt;&lt;/frameset&gt;&lt;/html&gt;.</P></DIV>
<P>Соответствующая этому коду структура электронного учебника представлена на 
рис.&nbsp;2.11<IMG class=иконка 
onclick="openimgindex('../files/ris_2_11.gif','Рис. 02.11.','#E8E8E6')" 
alt="Рис. 02.11." src="part-003.files/illustration.gif" border=0>. На 
рис.&nbsp;2.11<IMG class=иконка 
onclick="openimgindex('../files/ris_2_11.gif','Рис. 02.11.','#E8E8E6')" 
alt="Рис. 02.11." src="part-003.files/illustration.gif" border=0> отсутствуют 
фреймы заголовка и общей информации, а содержательная часть представлена в одном 
фрейме вместо двух. Каждый читатель может сам оценить, какая структура ему 
больше нравится, и попытаться сформулировать причины этого. Здесь первый фрейм 
назван «Навигация» (см. строка 3 исходного кода), а второй - «main», т.&nbsp;е. 
главный (см. строка 5 исходного кода). При начальной загрузке в главном фрейме 
выводится оглавление, так как во фрейме «Навигация» названия разделов даны в 
сокращенной форме, чтобы уменьшить протяженность этого фрейма по вертикали.</P>
<P>Основная адресация производится из фрейма «Навигация», но ссылки работают и 
из оглавления в главном фрейме. Для возврата в оглавление во фрейме «Навигация» 
есть специальная кнопка «Назад в оглавление». Во фреймах сделан фоновый рисунок, 
улучшающий дизайн издания. Размеры фреймов нельзя изменить (см. строка 4 в 
исходном коде).</P>
<P>Из других отличий отметим вставку в исходный код строк б и 7 для того случая, 
когда браузер пользователя не поддерживает фреймовой структуры. В этом случае 
будет выдано сообщение «Ваш браузер не поддерживает фреймы», так как 
тег-контейнер &lt;NOFRAMES&gt; содержит внутри контейнер &lt;BODY&gt; и 
&lt;/BODY&gt;, распознаваемый всеми без исключения браузерами, в результате чего 
они выводят в окне содержимое этого контейнера. При отсутствии этих двух 
контейнеров такой браузер выдал бы сообщение об ошибке или же, что еще хуже, не 
вывел бы ничего в своем окне. Тег-контейнер &lt;NOFRAMES&gt; предусмотрен 
специально для такого случая.</P>
<P>Из других замечаний можно указать, что звездочка (*) во второй строке 
исходного кода интерпретируется как «оставшаяся часть», вместо нее можно было бы 
написать 80% - и ничего бы не изменилось. Еще раз хочется обратить внимание на 
особенности навигации при использовании фреймов иначе - на взаимодействие 
фреймов. В ссвязистем, что во фрейме «Навигация» в качестве значения параметра 
«TARGET» указано «main» (см. строка 3 исходного кода), то все ссылки из фрейма 
«Навигация» будут загружать документы во фрейм «main». Кнопка во фрейме 
«Навигация» играетту же роль, что и изображение - указатель ссылки. Наконец, 
рисунки в этом учебнике выводятся в плавающих окнах, которые можно расположить 
так, как удобно пользователю. Пример вывода рисунка в плавающем окне в левой 
верхней части окна браузера показан на рис.&nbsp;2.12<IMG class=иконка 
onclick="openimgindex('../files/ris_2_12.gif','Рис. 02.12.','#E8E8E6')" 
alt="Рис. 02.12." src="part-003.files/illustration.gif" border=0>.</P>
<P><A name=i1036></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.8.</DIV>
<DIV class=заголовок2текст>HTML-формы</DIV></DIV></DIV>
<P></P>
<P><A name=i1037></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i1037"><IMG 
class=иконка alt=HTML-формы src="part-003.files/predmetnyi.gif" 
border=0></A><SPAN class=опред-е>HTML-формы</SPAN> - это особый вид 
гипертекстового документа, предназначенный для организации интерактивного 
взаимодействия в электронных изданиях. Именно с помощью формы мы общаемся с 
поисковым сервером, начиная поиск нужных материалов (документов) для работы, 
учебы или развлечения. Эту форму мы получаем с сервера и в специальном ее окне 
задаем параметры для поиска, например выражение в виде набора ключевых слов, 
т.&nbsp;е. тех слов, которые, по нашему мнению, наиболее важные и существенные в 
искомом документе. Таким образом, HTML-форма является средством пересылки данных 
от удаленного пользователя (клиента) к Web-серверу.</P>
<P>В <A name=i1040></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i1040"><IMG 
class=иконка alt="Язык HTML" src="part-003.files/predmetnyi.gif" 
border=0></A>языке HTML для задания форм используется теги &lt;FORM&gt; и 
&lt;/FORM&gt;. Этот контейнер размещается внутри тела HTML-документа, причем 
таких контейнеров может быть несколько, но вложений их один в другой не 
допускается. Тег &lt;FORM&gt; может содержать несколько параметров, а именно 
ACTION, METHOD, ENCTYPE. Некоторые браузеры поддерживают и другие параметры, 
помимо перечисленных трех стандартных. Первый из параметров задает адрес (URL) 
CGI-программы, которая будет обрабатывать данные этой формы. Это единственный 
обязательный параметр тега &lt;FORM&gt;.</P>
<P>Второй параметр (METHOD) определяет способ пересылки данных, содержащихся в 
форме, от браузера к Web-серверу. Он принимает два возможных значения: GET (по 
умолчанию) и POST. Значение METHOD=«POST» используется в случае необходимости 
пересылки на сервер определенного файла, который присоединяется к содержимому 
формы.</P>
<P>Параметр ENCTYPE определяет медиа-тип, используемый для кодирования и 
пересылки содержимого формы. Обычно его называют MIME-типом, где MIME-это 
аббревиатура, которая расшифровывается как Multipurpose Internet Mail Extension 
(многоцелевое расширение для Интернет-почты). Именно кодирование в соответствии 
со стандартом MIME позволяет безошибочно пересылать файлы, присоединяемые к 
HTML-форме.</P>
<P>Для создания отдельных полей внутри контейнера &lt;FORM&gt; и &lt;/FORM&gt; 
используются теги &lt;INPUT&gt;, &lt;SELECT&gt; и &lt;TEXTAREA&gt;. Первый из 
этих тегов употребляется чаще других и обеспечивает многочисленные возможности 
ввода информации. Так, с его помощью можно осуществить ввод текста различного 
назначения, создать группу элементов-переключателей, одиночные кнопки для 
выполнения некоторых стандартных операций (например, сброс введенных данных), 
поля для установки флажков, поле для ввода имени файла, присоединяемого к 
форме.</P>
<P>Тег &lt;SELECT&gt; используется для организации компактной структуры для 
вывода одного варианта из нескольких, задаваемых в виде списка прокрутки. А тег 
&lt;TEXTAREA&gt; создает внутри формы поле для ввода многострочного текста в 
виде прямоугольной области, снабженной при необходимости полосами прокрутки. 
Кратко рассмотрим использование всех этих тегов.</P>
<P>Тег &lt;INPUT&gt; содержит два обязательных параметра: TYPE, который задает 
тип поля ввода, и NAME, с помощью которого имя переменной, соответствующей этому 
полю ввода, передается CGI-программе.</P>
<P>Параметр TYPE может принимать несколько значений. Одно из этих значений 
TYPE=«TEXT». В этом случае в форме создается узкая прямоугольная область 
(фрагмент строки) для ввода текста. Причем при этом значении параметра TYPE в 
теге INPUT могут использоваться три дополнительных параметра, а именно: 
MAXLENGTH=&lt;число&gt;, который определяет максимальное число вводимых 
символов, SIZЕ=&lt;число&gt;, задающий количество отображаемых в форме символов, 
и VALUE, который определяет значение текстового поля по умолчанию.</P>
<P>Другой вариант текстового поля - это TYPE=«PASSWORD». В этом случае вводимые 
символы отображаются в форме звездочками. Однако реальная безопасность 
передаваемого пароля не обеспечивается, так как на сервер эта строка передается 
в незашифрованном виде, т.&nbsp;е. открыто.</P>
<P>Еще одно значение TYPE=«FILE», причем в этом случае одновременно сполем для 
ввода текста (имени локального, т.&nbsp;е. размещенного на компьютере клиента, 
файла) в форме создается кнопка с подписью BROWSE (просмотр). Файл, выбираемый в 
процессе просмотра (локальный адрес его может быть сразу введен в поле), 
подсоединяется к содержимому формы при ее пересылке на сервер. Для корректного 
выполнения этой операции должны быть правильно заданы параметры формы: 
METHOD=«POST» и ENCTYPE=«MULTIPART/FORM-DATA». В противном случае вместо 
содержимого файла на сервер будет передано только его имя.</P>
<P>Значение TYPE=«CHECKBOX» создает поле ввода одного символа-флажка или 
переключателя типа «включено» - «выключено». Такие поля могут объединяться в 
группы путем задания для всех одного имени (NAME). Используется параметр VALUE, 
который передает на сервер выбранные переключатели. Может присутствовать также 
параметр CHECKED, указывающий, что определенное значение соответствующего 
элемента является выбранным по умолчанию.</P>
<P>Значение TYPE=«RADIO» определяет структуру, подобную многопозиционному 
переключателю, т.&nbsp;е. набор из нескольких выключателей, один (и только один) 
из которых включен в любой отрезок времени. Каждый выключатель оформлен в виде 
круга, внутри которого при его выборе появляется точка. Здесь строковая 
переменная VALUE передает на сервер значение выбранной кнопки, а параметр 
CHECKED устанавливает значение по умолчанию.</P>
<P>Значение параметра TYPE=«RESET» или же «SUBMIT» соответственно отменяет все 
введенные в форму значения или же пересылает содержимое формы на сервер. В обоих 
случаях в форме отображаются кнопки с соответствующим и надписями. Надписи на 
кнопках можно русифицировать, задав значение параметра VALUE равным «ОТМЕНА» или 
же «ОК» («ПЕРЕСЫЛКА»). Возможно использование значения параметра TYPE=«IMAGE». В 
этом случае создается графическое изображение, аналогичное кнопке SUBMIT. Адрес 
изображения задается стандартным параметром SRC=&lt;URL файла-изображения&gt;, а 
способ выравнивания значением параметра ALIGN.</P>
<P>Иногда вместо тега INPUT используется контейнер &lt;SELECT&gt; и 
&lt;/SELECT&gt;, который позволяет организовать выбор значений в пределах 
спискового окна. Это обеспечивает экономию пространства формы. Пример 
контейнера:</P>
<DIV class=листинг>
<P>&lt;SELECT NАМЕ='имя поля' SIZE=[число видимых элементов списка]&gt;</P>
<P>&lt;OPTION VALUE='значение 1-го элемента'&gt; значение элемента</P>
<P>&lt;OPTION VALUE='значение 2-го элемента'&gt; значение элемента</P>
<P>&lt;OPTION VALUE='значение 3-го элемента'&gt; значение элемента</P>
<P>&lt;/SELECT&gt;</P></DIV>
<P>Если требуется возможность выбора нескольких значений элементов списка, то 
внутри тега &lt;SELECT&gt; после параметра SIZE используется дополнительный 
параметр MULTIPLY. Ему не требуется присваивать какого-либо значения, само его 
наличие в пределах тега является достаточным.</P>
<P>Внутри формы может использоваться и еще один контейнер, а именно с тегом 
&lt;TEXTAREA&gt;. Он обеспечивает ввод многострочного текста в прямоугольное 
окно. Параметры этого тега: NAME - для задания имени соответствующей переменной, 
ROWS и COLS - для определения размера прямоугольного окна, внутри которого 
набирается нужный текст. Может быть задан текст, выводимый внутри этого окна по 
умолчанию.</P>
<P>В качестве примера можно остановится на форме сервера <A class=переход 
href="http://www.rambler.ru/" target=_blank>http://www.rambler.ru/</A>, которая 
выводится на браузере клиента, желающего получить бесплатный почтовый адрес. На 
рис.&nbsp;2.13<IMG class=иконка 
onclick="openimgindex('../files/ris_2_13.gif','Рис. 02.13.','#E8E8E6')" 
alt="Рис. 02.13." src="part-003.files/illustration.gif" border=0>, представлена 
такая форма в несколько усеченном формате. Как видно на рисунке, большинство 
полей - текстовые однострочные, задаваемые тегом INPUT и значениями параметра 
TYPE, равным TEXT (E-mail, «Имя», «Фамилия», «Возраст») и PASSWORD («Введите 
пароль» и «Подтвердите пароль»). В состав формы включены два переключателя: для 
указания пола клиента и его юридического статуса (физическоелицо или 
представитель юридическоголица). Для сокращения размеров формы (она и так 
получилась довольно большой) в ней используются четыре списковых окна с одним 
единственным видимым элементом. Это реализуется с помощью тега-контейнера 
&lt;SELECT&gt; со значением параметра SIZE=1.</P>
<P>Наконец, в форме предусмотрена область для ввода текста, задаваемая с помощью 
тега &lt;TEXTAREA&gt;. Размер этой области: шесть строк и около ста столбцов. По 
умолчанию в этой области выводится текст юридического соглашения с клиентом 
бесплатной электронной почты, указывающий права и обязанности сторон. Клиент не 
может изменять этоттекст, он должен его прочесть и принять условия соглашения, 
изложенные в этом тексте, если намерен получить бесплатный почтовый адрес на 
этом сервере. В конце формы предусмотрена кнопка типа SUBMIT, представленная в 
виде графического изображения с надписью «Зарегистрироваться». Если клиент 
согласен с текстом соглашения, он нажимает кнопку «Зарегистрироваться» и 
получает бесплатный почтовый адрес на сервере RAMBLER.</P>
<P><A name=i1100></A></P>
<DIV class=заголовок>
<DIV class=заголовок2>
<DIV class=заголовок2нур>2.9.</DIV>
<DIV class=заголовок2текст>Понятие о динамическом HTML и его 
компонентах</DIV></DIV></DIV>
<P></P>
<P><A name=i1101></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i1101"><IMG 
class=иконка alt="Динамический HTML (DHTML)" src="part-003.files/predmetnyi.gif" 
border=0></A><SPAN class=опред-е>Динамический HTML (DHTML)</SPAN> - это не 
какой-то особый язык, а термин, который применяется для обозначения HTML-страниц 
с динамически изменяющимся содержимым. Такие страницы основаны на использовании 
помимо языка HTML каскадныхтаблиц стилей CSS (Cascade Style Sheets) и языка 
сценариев JavaScript или VBScript. Связь этих компонентов осуществляется с 
помощью так называемой объектной модели документа DOM (Document Object Model). 
При этом HTML-документ приобретает новое качество - возможность динамического 
изменения без перезагрузки страницы.</P>
<P>С помощью каскадных таблиц стилей определяется внешний вид документа: шрифт, 
разбивка на абзацы, цвет фона и шрифта, причем свой вариант отображения в окно 
браузера с их помощью можно установить для содержимого каждого из контейнеров 
(тегов).</P>
<P><A name=i1103></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i1103"><IMG 
class=иконка alt="Язык программирования JavaScript" 
src="part-003.files/predmetnyi.gif" border=0></A>Язык программирования 
JavaScript разработан фирмой <A name=i1104></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/companii.htm#i1104"><IMG 
class=иконка alt=Netscape src="part-003.files/companii.gif" 
border=0></A>Netscape для создания интерактивных HTML-документов. Язык позволяет 
разрабатывать как серверные приложения, так и приложения клиентские. Первые 
выполняются на Web-сервере, а вторые - браузером клиентского компьютера. Для 
обоих типов приложений используется общее ядро, включающее стандартные объекты и 
конструкции, и дополнения для конкретных приложений. Сказанное иллюстрируется 
рис.&nbsp;2.14<IMG class=иконка 
onclick="openimgindex('../files/ris_2_14.gif','Рис. 02.14.','#E8E8E6')" 
alt="Рис. 02.14." src="part-003.files/illustration.gif" border=0>. Как видно на 
рисунке, в состав ядра входит помимо переменных и функции LiveConnect - средство 
взаимодействия с Java-апплетами. Клиентские приложения непосредственно 
встраиваются в HTML-страницы и интерпретируются браузером по мере отображения 
элементов страницы, серверные же приложения предварительно компилируются для 
увеличения производительности.</P>
<P>Язык JavaScript используется на клиентской стороне для создания 
HTML-документов с помощью сценариев, в том числе совместно с CSS (каскадными 
таблицами стилей), для оперативной проверки HTML-форм до их передачи на сервер 
для последующей обработки и для взаимодействия с пользователем в процессе 
выполнения приложений этого языка. Трудно найти в сети Интернет хотя бы одну 
страницу, не содержащую операторов языка JavaScript. Чтобы браузер смог 
отобразить разработанную Web-страницу именно в том виде, в каком она 
задумывалась, на странице обычно помещают вызов функции JavaScript для 
идентификации типа используемого браузера и его версии.</P>
<P>Встраивание сценариев JavaScript в HTML-страницу можно осуществить одним из 
четырех способов:</P>
<UL class=маркер>
  <LI class=элемент>
  <P>заданием операторов этого языка внутри контейнера &lt;Script&gt; языка 
  HTML;</P>
  <LI class=элемент>
  <P>заданием имени файла языка JavaScript в параметре 5КСтега 
  &lt;Script&gt;;</P>
  <LI class=элемент>
  <P>использованием выражений языка JavaScript в качестве значений параметров 
  HTML-тегов;</P>
  <LI class=элемент>
  <P>путем определения обработчика событий в теге HTML.</P></LI></UL>
<P>Первые два способа, по нашему мнению, достаточно понятны и не нуждаются в 
дополнительных комментариях. Если переменные языка JavaScript желательно 
использовать в качестве параметров, то их следует заключать в фигурные скобки и 
размещать между символом ампесанда () и точкой с запятой. Например, в теге</P>
<DIV class=листинг>
<P>&lt;TABLE ALIGN=LEFT WIDTH=40% BORDER=5&gt;</P></DIV>
<P>значение параметр WIDTH можно сделать изменяемым, заменив константу 40% 
переменной языка JavaScript, как это сделано в выражении, представленном 
ниже:</P>
<DIV class=листинг>
<P>&lt;TABLE ALIGN=LEFT WIDTH='{JWidth);' BORDER=5&gt;,</P></DIV>
<P>причем значение переменная JWidth должно быть предварительно определено.</P>
<P>Для совместимости с языками сценариев в элементы форм языка HTML (<A 
class=переход 
href="http://www.hi-edu.ru/e-books/xbook119/01/part-003.htm#i1036">см. § 
2.8</A>) были введены специальные параметры обработки возникающих событий. 
Простейшим событием может быть нажатие левой кнопки мыши Click.</P>
<P>Значениями этих параметров могут служить операторы языка JavaScript. 
Соответствующий любому событию параметр будет иметь дополнительную приставку on, 
например событию Click будет соответствовать параметр onClick. Обработка событий 
задается в параметрах форм для того, чтобы проверить введенную в форму 
информацию до ее пересылки на сервер.</P>
<P>Обсуждение самого языка JavaScript потребовало бы отдельной главы. Поэтому мы 
ограничимся приведенными в данном коротком параграфе сведениями, а всех желающих 
глубже ознакомиться с ядром JavaScript отсылаем к многочисленным пособиям по 
этому языку, например <IMG class=иконка 
onclick="showlitlist(new Array('Матросов А., Сергеев А., Чаунин М. HTML4.0.- СПб.: BHV-Санкт- Петербург, 1999.',''));" 
alt="ссылка на источники литературы" src="part-003.files/litlist.gif">, где 
изложено его применение в HTML-документах.</P>
<P>Отметим, что фирма <A name=i1127></A><A class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/companii.htm#i1127"><IMG 
class=иконка alt=Microsoft src="part-003.files/companii.gif" 
border=0></A>Microsoft разработала язык создания сценариев VBScript, 
функциональные возможности которого ничем не отличаются от JavaScript. 
Определенным достоинством этого языка является возможность использования с 
небольшими доделками ранее написанных процедур на <A name=i1128></A><A 
class=указатель 
href="http://www.hi-edu.ru/e-books/xbook119/01/predmetnyi.htm#i1128"><IMG 
class=иконка alt="Язык Visual Basic" src="part-003.files/predmetnyi.gif" 
border=0></A>языке Visual Basic.</P></DIV></BODY></HTML>
