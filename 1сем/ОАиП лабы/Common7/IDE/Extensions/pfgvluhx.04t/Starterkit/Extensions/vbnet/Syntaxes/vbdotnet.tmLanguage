<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>vb</string>
	</array>
	<key>name</key>
	<string>VB.NET</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#singleLineComment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#region</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#quotedString</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#compilerOption</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#importDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numericConstant</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#characterOperator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lineContinuationOperator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#wordOperator</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#languageContants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#compilerDirectives</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#supportTypes</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#suportFunctions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#linqKeywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#languageVariable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#namespaceDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#moduleDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#interfaceDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#classDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#functionDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#lambdaDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#propertyDefinition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#propertyGetSet</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#definitionEnd</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#storageModifiers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#inheritanceModifiers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#controlKeywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#modifierKeywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#vbFunctions</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>characterOperator</key>
		<dict>
			<key>match</key>
			<string>(\.|\+=|\+|\*=|\*|\\=|\\|/=|/|=|-=|-|&lt;|&lt;=|&gt;|&gt;=|&amp;=|&amp;|\^|\^=|&gt;&gt;=|&gt;&gt;|&lt;&lt;=|&lt;&lt;|:=)</string>
			<key>name</key>
			<string>keyword.operator.vbnet</string>
		</dict>
		<key>classDefinition</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.class.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:\b(class)\s+([a-zA-Z_]\w*)\s*)</string>
			<key>name</key>
			<string>meta.class.vbnet</string>
		</dict>
		<key>compilerDirectives</key>
		<dict>
			<key>match</key>
			<string>^\s*(?i:#if|#else|#elseif|#endif|#const|#externalsource|#end|#end externalsource)\s+</string>
			<key>name</key>
			<string>keyword.directive.vbnet</string>
		</dict>
		<key>compilerOption</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.compiler-option.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.constant.compiler-option.vbnet</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.language.option-value.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:^\s*(option)\s*(strict|infer|explicit|compare)\s*(on|off|binary|text))</string>
		</dict>
		<key>controlKeywords</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(If|Then|Else|ElseIf|Else If|End If|While|End While|For|End For|To|Each|Case|Select|End Select|Return|Continue|Do|Until|Loop|Next|End With|With|Exit Do|Exit For|Exit Function|Exit Property|Exit Sub|IIf|Step|GoTo|Try|Catch|Finally|End Try|Using|RaiseEvent|Stop|On Error|Resume|Async|Await|Yield)\b)</string>
			<key>name</key>
			<string>keyword.control.vbnet</string>
		</dict>
		<key>definitionEnd</key>
		<dict>
			<key>match</key>
			<string>(?i:^\s*(end)\s+(function|sub|class|namespace|module|interface|property|addhandler|enum|event|operator|raiseevent|removehandler|select|structure|synclock))</string>
			<key>name</key>
			<string>keyword.control.end-definition.vbnet</string>
		</dict>
		<key>functionDefinition</key>
		<dict>
			<key>begin</key>
			<string>(?i:\b(function|sub)\s+([a-zA-Z_]\w*)\s*(\()?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type.function.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.vbnet</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>meta.parameters.vbnet</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.vbnet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))?\s*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.vbnet</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.vbnet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifierKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supportTypes</string>
				</dict>
			</array>
		</dict>
		<key>importDefinition</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>variable.other.namespace-alias.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:^\s*(imports)\s*([a-zA-Z_]\w*\s*=)?\s*([a-zA-Z_]\w*\.?)+)</string>
		</dict>
		<key>inheritanceModifiers</key>
		<dict>
			<key>match</key>
			<string>(?i:overloads|overrides|overridable|notoverridable|mustoverride|mustoverride overrides|notoverridable overrides|overloads overrides|mustinherit|notinheritable)</string>
			<key>name</key>
			<string>storage.modifier.inheritance.vbnet</string>
		</dict>
		<key>interfaceDefinition</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.interface.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.interface.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:\b(interface)\s+([a-zA-Z_]\w*)\s*)</string>
			<key>name</key>
			<string>meta.interface.vbnet</string>
		</dict>
		<key>lambdaDefinition</key>
		<dict>
			<key>match</key>
			<string>(?i:function|sub)</string>
			<key>name</key>
			<string>support.type.lambda.vbnet</string>
		</dict>
		<key>languageContants</key>
		<dict>
			<key>match</key>
			<string>((?i:true|false|nothing))</string>
			<key>name</key>
			<string>constant.language.vbnet</string>
		</dict>
		<key>languageVariable</key>
		<dict>
			<key>match</key>
			<string>\b((?i:Me|MyBase|MyClass))\.</string>
			<key>name</key>
			<string>keyword.other.vbnet</string>
		</dict>
		<key>lineContinuationOperator</key>
		<dict>
			<key>match</key>
			<string>\w*\b(\_)$</string>
			<key>name</key>
			<string>keyword.operator.vbnet</string>
		</dict>
		<key>linqKeywords</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(from|aggregate|select|where|order by|join|groupp by|into|group join|equals|let|distinct|skip|skip while|take|take while)\b)</string>
			<key>name</key>
			<string>keyword.control.linq.vbnet</string>
		</dict>
		<key>modifierKeywords</key>
		<dict>
			<key>match</key>
			<string>\b(?i:As|byval|byref|optional|handles|inherits|implements|withevents|end set|end get|of|alias|declare|widening|narrowing|ansi|assembly|auto|iterator|key|unicode)\s+</string>
			<key>name</key>
			<string>keyword.modifier.vbnet</string>
		</dict>
		<key>moduleDefinition</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.module.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.module.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:\b(module)\s+([a-zA-Z_]\w*)\s*)</string>
			<key>name</key>
			<string>meta.module.vbnet</string>
		</dict>
		<key>namespaceDefinition</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.namespace.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.namespace.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b((?i:namespace))\s+([a-zA-Z_]\w*)\s*</string>
			<key>name</key>
			<string>meta.namespace.vbnet</string>
		</dict>
		<key>numericConstant</key>
		<dict>
			<key>match</key>
			<string>\b(-?\d+(\.?\d?)*)</string>
			<key>name</key>
			<string>constant.numeric.vbnet</string>
		</dict>
		<key>propertyDefinition</key>
		<dict>
			<key>begin</key>
			<string>(?i:\b(property)\s+([a-zA-Z_]\w*)\s*(\()?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.property.vbnet</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.property.vbnet</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.property.vbnet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))?\s*</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.property.vbnet</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.property.vbnet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#modifierKeywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supportTypes</string>
				</dict>
			</array>
		</dict>
		<key>propertyGetSet</key>
		<dict>
			<key>match</key>
			<string>(?i:^\s*(protected friend|protected|friend|private)?\s+(get|set)\s*\(?\b)</string>
			<key>name</key>
			<string>keyword.other.property.accessor.vbnet</string>
		</dict>
		<key>quotedString</key>
		<dict>
			<key>match</key>
			<string>(")([^"]|"")*(")</string>
			<key>name</key>
			<string>string.quoted.double.vbnet</string>
		</dict>
		<key>region</key>
		<dict>
			<key>begin</key>
			<string>^\s*((?i:#region))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.directive.vbnet</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*((?i:#end region))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.directive.vbnet</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.region.source.vbnet</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>singleLineComment</key>
		<dict>
			<key>comment</key>
			<string>single quote comment</string>
			<key>match</key>
			<string>'.*$</string>
			<key>name</key>
			<string>comment.line.singlequote.vbnet</string>
		</dict>
		<key>storageModifiers</key>
		<dict>
			<key>match</key>
			<string>\b(?i:dim|public|private|protected friend|protected|friend|shadows|static|shared|readonly|default|partial|readonly|writeonly|erase|redim|lib)\b</string>
			<key>name</key>
			<string>storage.modifier.access.vbnet</string>
		</dict>
		<key>suportFunctions</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(new|addressof|addhandler|removehandler|throw|typeof|like|call|synclock)\b)</string>
			<key>name</key>
			<string>support.function.vbnet</string>
		</dict>
		<key>supportTypes</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(integer|decimal|double|single|date|long|short|char|string|byte|date|boolean|delegate|event|enum|sbyte|uinteger|ulong|ushort|const|object|global|paramarray)\b)</string>
			<key>name</key>
			<string>support.type.vbnet</string>
		</dict>
		<key>vbFunctions</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.vbnet</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b((?i:CBool|CByte|CChar|CDate|CDbl|CDec|Char|CInt|CLng|CObj|CSByte|CShort|CSng|CStr|CType|CUInt|CULng|CUShort|DirectCast|GetType|TryCast|GetXmlNamespace))\(</string>
		</dict>
		<key>wordOperator</key>
		<dict>
			<key>match</key>
			<string>(?i:\b(mod|not|and|andalso|or|orelse|in|is|isnot|xor|out)\b)</string>
			<key>name</key>
			<string>keyword.operator.vbnet</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.vbnet</string>
	<key>uuid</key>
	<string>975d5447-0eb5-444c-a471-5934193ca1ea</string>
</dict>
</plist>
